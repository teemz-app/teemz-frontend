{"version":3,"sources":["assets/loadingIcon.gif","components/Loading/Loading.js","data/axios-config.js","components/Loading/index.js","data/actions/api.js","components/TeamCard/ScoringComponents/ScoreT1/Score.js","components/TeamCard/ScoringComponents/ScoreT1/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/index.js","data/actions/state.js","components/TeamCard/ScoringComponents/ScoreCardT1.js","components/TeamCard/TeamComponents/RowPlayer.js","components/TeamCard/TeamComponents/PlayersCardT1/PlayersCardT1.js","components/TeamCard/TeamComponents/PlayersCardT1/index.js","components/TeamCardT1/TeamCardT1.js","components/TeamCardT1/index.js","components/TeamCard/ScoringComponents/ScoreT2/Score.js","components/TeamCard/ScoringComponents/ScoreT2/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/index.js","components/TeamCard/ScoringComponents/ScoreCardT2.js","components/TeamCard/TeamComponents/PlayersCardT2/PlayersCardT2.js","components/TeamCard/TeamComponents/PlayersCardT2/index.js","components/TeamCardT2/TeamCardT2.js","components/TeamCardT2/index.js","pages/GeneratingMatch.js","components/Button.js","components/GeneratePage/GeneratePage.js","components/GeneratePage/index.js","components/GenerateTeams.js","components/SeePlayers.js","components/SeeMatches.js","components/AddPlayer/AddPlayer.js","components/AddPlayer/index.js","components/PlayerAdded/PlayerAdded.js","components/PlayerAdded/index.js","components/SetTeamSize/TeamSize/TeamSize.js","components/SetTeamSize/TeamSize/index.js","components/SetTeamSize/TeamSizeButtons/TeamSizeButtons.js","components/SetTeamSize/TeamSizeButtons/index.js","pages/Menu.js","data/TeamGeneratingLogic/logic/playerWR.js","components/PlayerComponents/PlayerCard.js","pages/SeePlayersPage.js","components/NavToMenu.js","pages/GameSavedPage.js","components/LoadingMatches/LoadingMatches.js","components/LoadingMatches/index.js","components/MatchCard.js","pages/SeeMatchesPage.js","App/App.js","App/index.js","reportWebVitals.js","data/ScoringCardsLogic/incReducerT1.js","data/ScoringCardsLogic/decReducerT1.js","data/ScoringCardsLogic/incReducerT2.js","data/ScoringCardsLogic/decReducerT2.js","data/NavigationLogic/navGenPageReducer.js","data/NavigationLogic/navMenuPageReducer.js","data/NavigationLogic/navPlayersPageReducer.js","data/NavigationLogic/navMatchesPageReducer.js","data/TeamGeneratingLogic/logic/setTeamMembers.js","data/TeamGeneratingLogic/logic/fisherYatesShuffle.js","data/TeamGeneratingLogic/logic/compareByWR.js","data/TeamGeneratingLogic/logic/selectedPlayers.js","data/TeamGeneratingLogic/setTeamsReducer.js","data/NavigationLogic/navSavedGamePageReducer.js","data/InputLogic/updateTeamOneNameReducer.js","data/InputLogic/updateTeamTwoNameReducer.js","data/TeamSizeLogic/incTeamSizeReducer.js","data/TeamSizeLogic/decTeamSizeReducer.js","data/reducer.js","data/Initial.js","data/store.js","components/Header.js","index.js"],"names":["Loading","handleLoad","this","props","children","loaded","className","src","loadingIcon","alt","Component","axios","create","baseURL","headers","Accept","connect","dispatch","get","then","data","type","payload","Score","team_one_score","state","ScoreButtons","onIncrement","onDecrement","onClick","ScoreCardT1","ScoreT1","ScoreButtonsT1","RowPlayer","player","name","PlayersCardT1","team_one_players","map","id","Players","TeamCardT1","handleName","e","setState","team_one_name","target","value","handleSubmit","bind","onChange","maxLength","minLength","updateTeamOneName","team_two_score","ScoreCardT2","ScoreT2","ScoreButtonsT2","PlayersCardT2","team_two_players","TeamCardT2","team_two_name","updateTeamTwoName","GeneratingMatch","Button","handleClick","label","GeneratePage","post","team_one","team_two","console","log","forEach","patch","wins","losses","postMatch","GenerateTeams","useDispatch","SeePlayers","SeeMatches","AddPlayer","currentTarget","preventDefault","onSubmit","required","ref","input","focus","disabled","length","PlayerAdded","playersAdded","TeamSize","teams_size","TeamSizeButtons","Menu","playerWR","PlayerCard","toFixed","players","style","margin","NavToMenu","GameSavedPage","LoadingMatches","MatchCard","match","matches","App","page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","incReducerT1","decReducerT1","incReducerT2","decReducerT2","navGenPageReducer","navMenuPageReducer","navPlayersPageReducer","navMatchesPageReducer","setTeamMembers","playerPool","firstOfT1","firstOfT2","push","i","fisherYatesShuffle","j","Math","floor","random","compareByWR","player1","player2","player1WR","player2WR","selectedPlayers","allPLayers","sort","setTeamsReducer","teams","navSavedGamePageReducer","updateTeamOneNameReducer","updateTeamTwoNameReducer","incTeamSizeReducer","decTeamSizeReducer","reducer","action","initial","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","useSelector","goToPage","cursor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90f02275.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loadingIcon.04f89c1e.gif\";","import { Component } from 'react';\nimport loadingIcon from '../../assets/loadingIcon.gif';\n\nclass Loading extends Component {\n    componentDidMount() {\n        const { handleLoad } = this.props;\n        handleLoad();\n    }\n    \n    render() {\n        const { children, loaded } = this.props;\n\n        return loaded ? children : (\n            <div className=\"teamCard_container\">\n                <p className=\"title\">Loading...</p>\n                <img className=\"loadingIcon\" src={ loadingIcon } alt=\"CGI football spinning\" />\n            </div>\n        );\n    }\n}\n\nexport default Loading;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://peaceful-sea-21894.herokuapp.com/api/\",\n    headers: {\n        Accept: \"application/json\",\n    }\n})","import { connect } from 'react-redux';\nimport Loading from './Loading';\nimport { getPlayers } from '../../data/actions/api';\n\nconst mapStatetoProps = ({ loaded }) => {\n    return {\n        loaded: loaded,\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleLoad: () => dispatch(getPlayers()),\n    }\n}\n\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Loading)","import axios from '../../data/axios-config';\n\n\n// get players and then fire off the generate teams action which puts al players into state and randomly selected players into teams\nexport const getPlayers = () => {\n    return (dispatch) => {\n        axios.get('/players').then((data) => {\n            dispatch({type: \"PLAYERS_LOADED\", payload: data.data.data})\n        })\n        .then(() => dispatch({type: \"GENERATE_TEAMS\"}));\n    };\n};\n\n// get matches and then fire off the generate matches action which puts al matches into state so that they can be listed\nexport const getMatches = () => {\n    return (dispatch) => {\n        axios.get('/games').then((data) => {\n            console.log(data.data.data);\n            dispatch({type: \"MATCHES_LOADED\", payload: data.data.data})\n        })\n        .then(() => dispatch({type: \"GENERATE_MATCHES\"}));\n    };\n};\n\n\n// posts Match, and then patches all the players that were in that match so that their wins and losses data remain up to date\nexport const postMatch = ({ team_one_name, team_one_score, team_two_name, team_two_score, team_one_players, team_two_players }) => {\n    return (dispatch) => {\n        axios.post('/games', {\n            team_one: team_one_name,\n            team_one_score: team_one_score,\n            team_two: team_two_name,\n            team_two_score: team_two_score,\n\n        }).then(()=>console.log(team_one_players, team_one_score)).then(() => {    \n\n            // post request to update player one \n            team_one_players.forEach(player => {\n                if (team_one_score > team_two_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins + 1,\n                        losses: player.losses,\n                    })\n                } else if (team_two_score > team_one_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins,\n                        losses: player.losses + 1,\n                    })\n                }\n            })}\n        ).then(() => {\n\n            // post request to update player two\n            team_two_players.forEach(player => {\n                if (team_one_score > team_two_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins + 1,\n                        losses: player.losses,\n                    })\n                } else if (team_two_score > team_one_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins,\n                        losses: player.losses + 1,\n                    })\n                }\n            })\n        }).then(() => dispatch({type: \"NAV_TO_SAVED_GAME\"}));\n    }\n}\n\n// add new player to the database\nexport const postPlayer = (player) => {\n    console.log(player);\n    return (dispatch) => {\n        axios.post('/players', {\n            name: player.name,\n        }).then(() => dispatch({type: \"PLAYER_ADDED\"}))\n    };\n}","// Display the current score set for this team\nconst Score = ({ team_one_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_one_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_one_score: state.team_one_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","// This component changes one of the team's score in state\nconst ScoreButtons = ({ onIncrement, onDecrement }) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamOne, decTeamOne } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamOne()),\n    onDecrement: () => dispatch(decTeamOne()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","// Team one score\nexport const incTeamOne = () => {\n    return {\n        type: \"INC_TEAM_ONE\",\n    }\n}\n\nexport const decTeamOne = () => {\n    return {\n        type: \"DEC_TEAM_ONE\",\n    }\n}\n\n// Team two score\nexport const incTeamTwo = () => {\n    return {\n        type: \"INC_TEAM_TWO\",\n    }\n}\n\nexport const decTeamTwo = () => {\n    return {\n        type: \"DEC_TEAM_TWO\",\n    }\n}\n\n\n// Team Names\nexport const updateTeamOneName = (data) => {\n    return {\n        type: \"UPDATE_TEAM_ONE\",\n        data: data,\n    }\n}\n\nexport const updateTeamTwoName = (data) => {\n    return {\n        type: \"UPDATE_TEAM_TWO\",\n        data: data,\n    }\n}\n\n// Set team size\nexport const incTeamSize = () => {\n    return {\n        type: \"INC_TEAM_SIZE\",\n    }\n}\n\nexport const decTeamSize = () => {\n    return {\n        type: \"DEC_TEAM_SIZE\",\n    }\n}","import ScoreT1 from \"../ScoringComponents/ScoreT1\";\nimport ScoreButtonsT1 from \"../ScoringComponents/ScoreButtonsT1\";\n\n// This component is the parent component of scoore and score buttons for one of the teams\n\nconst ScoreCardT1 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>   \n        <ScoreT1 />\n        <ScoreButtonsT1 />\n    </>\n);\n\nexport default ScoreCardT1;","const RowPlayer = (player) => (\n    <>\n        <div className=\"teamCard_playerName\">\n            <p>{ player.name }</p>\n        </div>\n\n    </>\n);\n\nexport default RowPlayer;\n","import RowPlayer from '../RowPlayer';\n\n// Show all the players of one of the generated teams, by using the RowPlayer component\n\nconst PlayersCardT1 = ({team_one_players}) => {\n\n    return (\n        <div>\n        {\n            team_one_players.map(player => (\n                <RowPlayer name = { player.name } key = { player.id }/>\n            ))\n        }\n        </div>\n    )\n\n}\n\nexport default PlayersCardT1;\n\n","import { connect } from 'react-redux';\nimport Players from './PlayersCardT1';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_one_players: state.team_one_players,\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","import ScoreCard from '../TeamCard/ScoringComponents/ScoreCardT1';\nimport PlayersCardT1 from '../TeamCard/TeamComponents/PlayersCardT1';\nimport { Component } from 'react';\n\n// This component uses the previous components, but also tracks the state of the input field for the team name, and updates the global state with every keystroke.\n\nclass TeamCardT1 extends Component {\n    constructor(props) {\n        super(props);\n\n        // local state\n        this.state = {\n            team_one_name: \"Team 1\",\n        };\n\n        // bind events\n        this.handleName = this.handleName.bind(this);\n    };\n\n    handleName = e => {\n        this.setState({\n            ...this.state,\n            team_one_name: e.target.value\n        });\n        this.props.handleSubmit(e.target.value);\n    };\n\n\n    render() {\n        const { team_one_name } = this.state;\n\n        return (\n            <>\n            <div className=\"teamCard_container\">\n                <input\n                type=\"text\"\n                value={team_one_name}\n                onChange={this.handleName}\n                maxLength=\"35\"\n                minLength=\"2\"\n                className=\"teamCard_teamName\" />\n        \n                <PlayersCardT1 />\n                <ScoreCard />\n            </div>\n        </>\n        )\n    };\n}\n\nexport default TeamCardT1;","import { connect } from 'react-redux';\nimport { updateTeamOneName } from '../../data/actions/state.js';\nimport TeamCardT1 from './TeamCardT1';\n\n// State\nconst mapStateToProps = ({ team_one_name }) => {\n    return {\n        team_one_name,\n    };\n};\n\n// Dispatch \nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSubmit: (data) => { dispatch(updateTeamOneName(data)) }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamCardT1);","// Display the current score set for this team\nconst Score = ({ team_two_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_two_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_two_score: state.team_two_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","// This component changes one of the team's score in state\nconst ScoreButtons = ({ onIncrement, onDecrement}) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamTwo, decTeamTwo } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamTwo()),\n    onDecrement: () => dispatch(decTeamTwo()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","import ScoreT2 from \"./ScoreT2\";\nimport ScoreButtonsT2 from \"./ScoreButtonsT2\";\n\n// This component is the parent component of scoore and score buttons for one of the teams\n\nconst ScoreCardT2 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>\n\n        <ScoreT2 />\n        <ScoreButtonsT2 />\n    </>\n);\n\nexport default ScoreCardT2;","import RowPlayer from '../RowPlayer';\n\n// Show all the players of one of the generated teams, by using the RowPlayer component\n\nconst PlayersCardT2 = ({ team_two_players }) => {\n    \n    return (\n        <ul>\n        {\n            team_two_players.map(player => (\n                <RowPlayer name = { player.name } key = { player.id } />\n            ))\n        }\n        </ul>\n    )\n\n}\n\nexport default PlayersCardT2;","import { connect } from 'react-redux';\nimport Players from './PlayersCardT2';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_two_players: state.team_two_players\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","import ScoreCard from '../TeamCard/ScoringComponents/ScoreCardT2';\nimport PlayersCardT2 from '../TeamCard/TeamComponents/PlayersCardT2';\nimport { Component } from 'react';\n\n// This component uses the previous components, but also tracks the state of the input field for the team name, and updates the global state with every keystroke.\nclass TeamCardT2 extends Component {\n    constructor(props) {\n        super(props);\n\n        // local state\n        this.state = {\n            team_two_name: \"Team 2\",\n        };\n\n        // bind events\n        this.handleName = this.handleName.bind(this);\n    };\n\n    handleName = e => {\n        this.setState({\n            ...this.state,\n            team_two_name: e.target.value\n        });\n        this.props.handleSubmit(e.target.value);\n    };\n\n\n    render() {\n        const { team_two_name } = this.state;\n\n        return (\n            <>\n            <div className=\"teamCard_container\">\n                <input\n                type=\"text\"\n                value={team_two_name}\n                onChange={this.handleName}\n                maxLength=\"35\"\n                minLength=\"2\"\n                className=\"teamCard_teamName\" />\n        \n                <PlayersCardT2 />\n                <ScoreCard />\n            </div>\n        </>\n        )\n    };\n}\n\nexport default TeamCardT2;","import { connect } from 'react-redux';\nimport { updateTeamTwoName } from '../../data/actions/state.js';\nimport TeamCardT2 from './TeamCardT2';\n\n// State\nconst mapStateToProps = ({ team_two_name }) => {\n    return {\n        team_two_name,\n    };\n};\n\n// Dispatch \nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSubmit: (data) => { dispatch(updateTeamTwoName(data)) }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamCardT2);","import Loading from '../components/Loading';\nimport TeamCardT1 from '../components/TeamCardT1';\nimport TeamCardT2 from '../components/TeamCardT2';\n\n\nconst GeneratingMatch = () => { \n    return ( \n    <>\n        <Loading>\n            <TeamCardT1 />\n            <TeamCardT2 />\n        </Loading>\n\n\n    </>\n);\n}\n\nexport default GeneratingMatch;","const Button = ({handleClick, label}) => {\n    return (<>\n        <button className=\"doButton\" onClick={ handleClick }>{ label }</button>\n    </>)\n}\n\nexport default Button;","import GeneratingMatch from '../../pages/GeneratingMatch';\nimport Button from \"../Button\";\n\nlet GeneratePage = ({ handleClick, data }) => {\n    return (\n        <>\n            <GeneratingMatch />\n\n            <Button\n            handleClick={() => {\n                handleClick(data)\n            }}\n            label=\"Save Game!\"\n            type=\"button\"\n            />\n        </>\n    )\n}\n\nexport default GeneratePage;","import { connect } from 'react-redux';\nimport GeneratePage from './GeneratePage';\nimport { postMatch } from '../../data/actions/api';\n\nconst mapStatetoProps = (state) => {\n    return {\n        data: {\n            team_one_name: state.team_one_name,\n            team_one_score: state.team_one_score,\n            team_two_name: state.team_two_name,\n            team_two_score: state.team_two_score,\n            team_one_players: state.team_one_players,\n            team_two_players: state.team_two_players,\n        }\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleClick: (data) => postMatch(data)(dispatch),\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(GeneratePage)","import { useDispatch } from \"react-redux\";\n\n// A navigation button to take the user to the generate teams page\n\nconst GenerateTeams = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_GENERATE\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    Generate Teams\n                </button>\n        </>\n        )\n    }\n\nexport default GenerateTeams;\n\n\n\n\n","import { useDispatch } from \"react-redux\";\n\n// A navigation button to take the user to the see players page\n\nconst SeePlayers = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_PLAYERS\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    See Players\n                </button>\n        </>\n        )\n    }\n\nexport default SeePlayers;\n\n\n\n\n","import { useDispatch } from \"react-redux\";\n\n// A navigation button to take the user to the See Matches page\n\nconst SeeMatches = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_MATCHES\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    See Matches\n                </button>\n        </>\n        )\n    }\n\nexport default SeeMatches;\n","import { Component } from 'react';\n\n/*\nAdd player has an input field. On submit will fire off the API post request via axios, clear the input field, and reselect it. \nThis way the user can submit several players without having to use the mouse\n*/\nclass AddPlayer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\", // start empty\n        };\n\n        this.handleName = this.handleName.bind(this);\n    };\n\n    // Name Input\n    handleName = e => {\n        this.setState({\n            name: e.currentTarget.value // tracking user inputs\n        });\n    };\n\n    // handle form submit\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleClick({ ...this.state }); // pass the value to axios and state\n\n        this.setState({\n            name: \"\", // clear input field\n        });\n    };\n\n    render() {\n        const { name } = this.state;\n\n        return (\n            <form\n                onSubmit={this.handleSubmit}>\n                <div className=\"menu_playerContaier\">\n                        <input\n                            className=\"menu_inputField\"\n                            type=\"text\"\n                            value={name}\n                            onChange={this.handleName}\n                            maxLength=\"25\"\n                            minLength=\"2\"\n                            required\n                            ref={function (input) { // refocus onto the input field once submitted.\n                                if (input != null) {\n                                    input.focus();\n                                }\n                            }}\n                        />\n                    <button disabled={name.length <= 2} type=\"submit\" className=\"doButton\">Add Player</button>  {/* Submit request if name is more than two characters long */}\n                </div>\n            </form>\n        )\n    };\n};\n\nexport default AddPlayer;","import { connect } from 'react-redux';\nimport AddPlayer from './AddPlayer';\nimport { postPlayer } from '../../data/actions/api';\n\n// Dispatch \nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClick: (data) => dispatch(postPlayer(data)), // dispatch API request\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(AddPlayer)","const PlayerAdded = ({ playersAdded }) => {\n    if (playersAdded > 0) {\n        return (\n            <>  \n                <p className=\"playerAdded\">Player Added!</p>\n            </>\n        )\n    }\n    return <></>;\n};\n\nexport default PlayerAdded;\n","import { connect } from \"react-redux\";\nimport PlayerAdded from \"./PlayerAdded\";\n\nlet mapStateToProps = (state) => {\n    return {\n        playersAdded: state.playersAdded,\n    };\n};\n\nexport default connect(mapStateToProps)(PlayerAdded);\n\n","const TeamSize = ({ teams_size }) => ( \n    <>  \n        <h2 className=\"menu_setTeamSize_title\">Set Team Size</h2>\n        <p className=\"teamCard_teamScore\">{ teams_size / 2 }</p>\n    </>\n);\n// The state records teams_size i.e total players. So divide it by two so as to display players per team\nexport default TeamSize;\n","import { connect } from \"react-redux\";\nimport TeamSize from \"./TeamSize\";\n\nlet mapStateToProps = (state) => {\n    return {\n        teams_size: state.teams_size,\n    };\n};\n\nexport default connect(mapStateToProps)(TeamSize);\n\n","// This component changes the teams_size state by 2 so that there is always an even number\n\nconst TeamSizeButtons = ({ onIncrement, onDecrement}) => ( \n    <>\n        <div className=\"menu_teamButtons_container\">\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n\n        </div>\n    </>\n);\n\nexport default TeamSizeButtons;","import { connect } from \"react-redux\";\nimport TeamSizeButtons from \"./TeamSizeButtons\";\nimport { incTeamSize, decTeamSize } from '../../../data/actions/state';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamSize()),\n    onDecrement: () => dispatch(decTeamSize()),\n});\n\nexport default connect(null, mapDispatchToProps)(TeamSizeButtons);\n\n","import GenerateTeams from '../components/GenerateTeams';\nimport SeePlayers from '../components/SeePlayers';\nimport SeeMatches from '../components/SeeMatches';\nimport AddPlayer from '../components/AddPlayer';\nimport PlayerAdded from '../components/PlayerAdded';\nimport TeamSize from '../components/SetTeamSize/TeamSize';\nimport TeamSizeButtons from '../components/SetTeamSize/TeamSizeButtons';\n\n\nlet Menu = () => (\n    <>\n    <nav className=\"menu\">\n        <div className=\"menu_setTeamSize\">\n            <TeamSize />\n            <TeamSizeButtons />\n        </div>\n\n        <GenerateTeams />\n        <SeePlayers />\n        <SeeMatches />\n        <AddPlayer />\n        <PlayerAdded />\n\n    </nav>\n    \n    </>\n);   \n\nexport default Menu;","// This allows us to calculate the win rate of individual players, our means to measure skill\nlet playerWR = (player) => player.wins === 0 ? -(player.losses) : player.wins / (player.wins + player.losses);\n\nexport default playerWR;","import playerWR from '../../data/TeamGeneratingLogic/logic/playerWR';\n// Display individual player data\nconst PlayerCard = (player) => (\n    <>\n        <div className=\"playerCard_container\">\n            <h2 className=\"playerCard_playerName\">{ player.name }</h2>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Wins</p>\n                <p className=\"playerCard_data\">{ player.wins }</p>\n            </div>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Losses</p>\n                <p className=\"playerCard_data\">{ player.losses }</p>\n            </div>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Win Rate:</p>\n                <p className=\"playerCard_data playerWR\">{ playerWR(player).toFixed(2) }</p> {/* playerWR calcualted the player win rate */}\n            </div>\n        </div>\n\n    </>\n);\n\nexport default PlayerCard;\n","import PlayerCard from '../components/PlayerComponents/PlayerCard';\nimport { connect} from 'react-redux';\nimport Loading from '../components/Loading';\n\nconst SeePlayersPage = ({players}) => (\n    <>\n        <Loading>\n            <div style={{margin: \"100px\"}} />\n            {players.map(player => {\n                    return  <PlayerCard \n                    name = {player.name}\n                    wins = { player.wins }\n                    losses = { player.losses }\n                    key = { player.id }\n                    />\n                })\n            }\n        </Loading>\n    </>\n)\n\nconst mapStatetoProps = (state) => ({players: state.players});\n\nexport default connect(mapStatetoProps)(SeePlayersPage);","import { useDispatch } from \"react-redux\";\n\n// A navigation button to take the user to the Menu page\n\nconst NavToMenu = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_MENU\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    Main Menu\n                </button>\n        </>\n        )\n    }\n\nexport default NavToMenu;","import SeePlayers from '../components/SeePlayers';\nimport NavToMenu from '../components/NavToMenu';\nimport SeeMatches from '../components/SeeMatches';\n\nlet GameSavedPage = () => (\n    <nav className=\"playerCard_container\">\n        <div className=\"menu\">\n            <h2 className=\"title\">Game Saved!</h2>\n            <NavToMenu />\n            <SeePlayers/>\n            <SeeMatches />\n        </div>\n    </nav>\n)\n\n\nexport default GameSavedPage;","import { Component } from 'react';\nimport loadingIcon from '../../assets/loadingIcon.gif';\n\nclass LoadingMatches extends Component {\n    componentDidMount() {\n        const { handleLoad } = this.props;\n        handleLoad();\n    }\n    \n    render() {\n        const { children, loaded } = this.props;\n\n        return loaded ? children : (\n            <div className=\"teamCard_container\">\n                <p className=\"title\">Loading...</p>\n                <img className=\"loadingIcon\" src={ loadingIcon } alt=\"CGI football spinning\" />\n            </div>\n        );\n    }\n}\n\nexport default LoadingMatches;","import { connect } from 'react-redux';\nimport LoadingMatches from './LoadingMatches';\nimport { getMatches } from '../../data/actions/api';\n\nconst mapStatetoProps = ({ loaded }) => {\n    return {\n        loaded: loaded,\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleLoad: () => dispatch(getMatches()),\n    }\n}\n\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(LoadingMatches)","// Show Match data\n\nconst MatchCard = (match) => (\n    <>\n        <div className=\"matchCard_container\">\n            <div className=\"matchCard_dataRow\">\n                <p className=\"matchCard_dataLabel\">{ match.team_one }</p>\n                <p className=\"matchCard_data\">{ match.team_one_score }</p>\n            </div>\n\n            <div className=\"matchCard_dataRow\">\n                <p className=\"matchCard_dataLabel\">{ match.team_two }</p>\n                <p className=\"matchCard_data\">{ match.team_two_score }</p>\n            </div>\n        </div>\n    </>\n);\n\nexport default MatchCard;","import { connect} from 'react-redux';\nimport Loading from '../components/LoadingMatches';\nimport MatchCard from '../components/MatchCard';\n\nconst SeeMatchesPage = ({matches}) => (\n    <>\n        <Loading>\n            <div style={{margin: \"100px\"}} />\n            {matches.map(match => {\n                    return  <MatchCard \n                    team_one = { match.team_one }\n                    team_one_score = { match.team_one_score }\n                    team_two = { match.team_two }\n                    team_two_score = { match.team_two_score }\n                    key = { match.id }\n                    />\n                })\n            }\n        </Loading>\n    </>\n)\n\nconst mapStatetoProps = (state) => ({matches: state.matches});\n\nexport default connect(mapStatetoProps)(SeeMatchesPage);","import GeneratePage from '../components/GeneratePage';\nimport Menu from '../pages/Menu';\nimport SeePlayersPage from '../pages/SeePlayersPage';\nimport GameSavedPage from '../pages/GameSavedPage';\nimport SeeMatchesPage from '../pages/SeeMatchesPage';\n\n/*\nApp.js is where the app decides which page shows, based off of the page key value in state.\n*/\n\nconst App = ({ page }) => {\n\n    switch(page) {\n        case \"generate\": return <GeneratePage />; // page that shows teams\n        case \"menu\": return <Menu /> ;\n        case \"players\": return <SeePlayersPage /> ;\n        case \"game_saved\": return <GameSavedPage /> ;\n        case \"matches\": return <SeeMatchesPage /> ;\n        default: return <Menu />;\n    }\n}\n\nexport default App;","import { connect } from \"react-redux\";\nimport App from \"./App\";\n\n/*\nThis react-redux wrapper passes page into App.js so that it can display the appropriate pages\n*/\n\nlet mapStateToProps = (state) => {\n    return {\n        page: state.page,\n    };\n};\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const incReducerT1 = (state) => { // increase team score\n    return {\n        ...state,\n        team_one_score: state.team_one_score + 1\n    };\n}\n\nexport default incReducerT1;","const decReducerT1 = (state) => { // reduce team score\n    return {\n        ...state,\n        team_one_score: state.team_one_score > 0 ? state.team_one_score - 1 : state.team_one_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT1;","const incReducerT2 = (state) => { // increase team score\n    return {\n        ...state,\n        team_two_score: state.team_two_score + 1\n    };\n}\n\nexport default incReducerT2;","const decReducerT2 = (state) => { // reduce team score\n    return {\n        ...state,\n        team_two_score: state.team_two_score > 0 ? state.team_two_score - 1 : state.team_two_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT2;","const navGenPageReducer = (state) => { // logic to show generate team page\n    return {\n        ...state,\n        page: \"generate\",\n    }\n}\n\nexport default navGenPageReducer;","const navMenuPageReducer = (state) => { // logic to show menu page\n    return {\n        ...state,\n        page: \"menu\",\n    }\n}\n\nexport default navMenuPageReducer;","const navPlayersPageReducer = (state) => { // logic to show see players team page\n    return {\n        ...state,\n        page: \"players\",\n    }\n}\n\nexport default navPlayersPageReducer;","const navMatchesPageReducer = (state,) => { // logic to show see matches page\n    return {\n        ...state,\n        page: \"matches\",\n        loaded: true,\n    }\n}\n\nexport default navMatchesPageReducer;","/*\nGENERATING THE TWO TEAMS\nThe top two players are passed into individual arrays. then second best player gets slightly higher level teammates than the best player.\n*/\nlet setTeamMembers = (playerPool) => { // playerPool = [{p1},{p2}..{pn}]\n    let firstOfT1 = playerPool[0];\n    let firstOfT2 = playerPool[1];\n\n    // Pass highest level player into team 1\n    let team_one_players = []\n    team_one_players.push(firstOfT1);\n\n    // pass second highest level player into team 2\n    let team_two_players = [];\n    team_two_players.push(firstOfT2);\n\n\n    // odd indexed players go into team 1, and even indexed players go into team two, excluding the top two players\n    for (let i = 2; i < (playerPool.length); i += 1) {\n        i % 2 === 0 ? team_two_players.push(playerPool[i]) : team_one_players.push(playerPool[i]);\n    }\n\n    // we return the balanced teams as an object containins the two team arrays\n    return {\n        team_one_players: team_one_players,\n        team_two_players: team_two_players,\n    };\n}\n\nexport default setTeamMembers;\n","// Fisher-Yates shuffle to shuffle players array into random order, and is considered an efficient way of shuffling an array.\nlet fisherYatesShuffle = (players) => {\n    for (let i = players.length - 1; i > 0; i -= 1) {\n        let j = Math.floor(Math.random() * (i + 1));\n\n        [players[i], players[j]] = [players[j], players[i]];\n    }\n    return players;\n}\n\nexport default fisherYatesShuffle;","// The re-ordering logic required inside .sort() for reordering the players in terms of win rate\nimport playerWR from './playerWR';\n\nlet compareByWR = (player1, player2) => {\n    let player1WR = playerWR(player1);\n    let player2WR = playerWR(player2);\n\n    if (player1WR < player2WR) {\n        return 1;\n    } else if (player1WR > player2WR) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nexport default compareByWR;","import fisherYatesShuffle from './fisherYatesShuffle';\nimport compareByWR from './compareByWR';\n\n/*\nWe're shuffling the players and then taking all the players needed from the beginning of the array, and keeping them in a new array.\nAfter this we sort the array so that higher win rate players (the better ones) are at the beginning of the array, and then return irt\n*/\nlet selectedPlayers = (teams_size, players) => {\n    // randomise playerbase\n    let allPLayers = [...fisherYatesShuffle(players)];\n    // array of players to be returned at the end of this function\n    let playerPool = [];\n\n    // push first ten players of the shuffled array into playerPool, as this will be the pool of players we'll get teams from\n    for (let i = 0; i < (teams_size <= players.length ? teams_size : players.length); i += 1) {\n        playerPool.push(allPLayers[i]);\n    }\n\n    // sort the array so tghat high skill players are at the beginning and return it.\n    return playerPool.sort(compareByWR);\n}\n\nexport default selectedPlayers;","import setTeamMembers from './logic/setTeamMembers';\nimport selectedPlayers from './logic/selectedPlayers';\n\n// pass the two chosen teams into state\n\nconst setTeamsReducer = (state) => {\n    let players =  state.players;\n    let teams_size = state.teams_size;\n\n    // Select required players and generate two balanced teams\n    let playerPool = selectedPlayers(teams_size, players);\n    let teams = setTeamMembers(playerPool);\n    return {\n        ...state,\n        team_one_players: teams.team_one_players,\n        team_two_players: teams.team_two_players,\n    }\n}\n\nexport default setTeamsReducer;","const navSavedGamePageReducer = (state) => { // logic to show saved game page\n    return {\n        ...state,\n        page: \"game_saved\",\n    }\n}\n\nexport default navSavedGamePageReducer;","const updateTeamOneNameReducer = (state, data) => { // update team name in state\n    return {\n        ...state,\n        team_one_name: data.data,\n    };\n};\n\nexport default updateTeamOneNameReducer;","const updateTeamTwoNameReducer = (state, data) => { // update team name in state\n    return {\n        ...state,\n        team_two_name: data.data,\n    };\n};\n\nexport default updateTeamTwoNameReducer;","const incTeamSizeReducer = (state) => { // increase number of players in each team\n    return {\n        ...state,\n        teams_size: state.teams_size <= 30 ? state.teams_size + 2 : state.teams_size,\n    };\n}\n\nexport default incTeamSizeReducer;","// reduce number of players in each team\nconst decTeamSizeReducer = (state) => {\n    return {\n        ...state,\n        teams_size: state.teams_size >= 0 ? state.teams_size - 2 : 0, // ensure users can use negative numbers\n    };\n}\n\nexport default decTeamSizeReducer;","// Control Team One Scoring\nimport incReducerT1 from './ScoringCardsLogic/incReducerT1';\nimport decReducerT1 from './ScoringCardsLogic/decReducerT1';\n\n// Control Team Two Scoring\nimport incReducerT2 from './ScoringCardsLogic/incReducerT2';\nimport decReducerT2 from './ScoringCardsLogic/decReducerT2';\n\n// Navigate Pages\nimport navGenPageReducer from \"./NavigationLogic/navGenPageReducer\";\nimport navMenuPageReducer from './NavigationLogic/navMenuPageReducer';\nimport navPlayersPageReducer from './NavigationLogic/navPlayersPageReducer';\nimport navMatchesPageReducer from './NavigationLogic/navMatchesPageReducer';\n\n// Generate Teams\nimport setTeamsReducer from './TeamGeneratingLogic/setTeamsReducer';\nimport navSavedGamePageReducer from './NavigationLogic/navSavedGamePageReducer';\n\n// Update Team Names\nimport updateTeamOneNameReducer from './InputLogic/updateTeamOneNameReducer';\nimport updateTeamTwoNameReducer from './InputLogic/updateTeamTwoNameReducer';\nimport incTeamSizeReducer from './TeamSizeLogic/incTeamSizeReducer';\nimport decTeamSizeReducer from './TeamSizeLogic/decTeamSizeReducer';\n\n\n\nlet reducer = (state, action) => {\n    switch (action.type) {\n\n        // Team One Scoring\n        case \"INC_TEAM_ONE\": return incReducerT1(state);\n        case \"DEC_TEAM_ONE\": return decReducerT1(state);\n\n        // Team Two Scoring\n        case \"INC_TEAM_TWO\": return incReducerT2(state);\n        case \"DEC_TEAM_TWO\": return decReducerT2(state);\n\n        // Navigate Pages\n        case \"NAV_TO_MENU\": return navMenuPageReducer(state); \n        case \"NAV_TO_GENERATE\": return navGenPageReducer(state);\n        case \"NAV_TO_PLAYERS\": return navPlayersPageReducer(state);\n        case \"NAV_TO_MATCHES\": return navMatchesPageReducer (state);\n        case \"NAV_TO_SAVED_GAME\": return navSavedGamePageReducer(state);\n\n        // Generate Teams\n        case \"PLAYERS_LOADED\": return {...state, players: action.payload, loaded: true};\n        case \"GENERATE_TEAMS\": return setTeamsReducer(state);\n\n        // Set Teams\n        case \"MATCHES_LOADED\": return {...state, matches: action.payload, loaded: true};\n\n        // Handling Input data\n        case \"UPDATE_TEAM_ONE\": return updateTeamOneNameReducer(state, action);\n        case \"UPDATE_TEAM_TWO\": return updateTeamTwoNameReducer(state, action);\n        case \"PLAYER_ADDED\": return {...state, playersAdded: state.playersAdded+1};\n\n        // Team Two Scoring\n        case \"INC_TEAM_SIZE\": return incTeamSizeReducer(state);\n        case \"DEC_TEAM_SIZE\": return decTeamSizeReducer(state);\n        \n        default: return state;\n    }\n};\n\nexport default reducer;","// Initial state\nconst initial = {\n    page: \"menu\",\n    loaded: false,\n\n    team_one_score: 0,\n    team_two_score: 0,\n\n    team_one_name: \"Team 1\",\n    team_two_name: \"Team 2\",\n\n    teams_size: 10,\n\n    players: [],\n    \n    team_one_players: [],\n    team_two_players: [],\n\n    matches: [],\n    \n    player: {\n        name: \"\",\n        wins: 0,\n        losses: 0,\n    },\n\n    playersAdded: 0,\n\n};\n\nexport default initial;\n\n","import reducer from './reducer';\nimport initial from './Initial';\n\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import { useDispatch, useSelector } from \"react-redux\";\n\n// Show two different headers. Sticky header for pages that could end up being very long, such as the see players and matches pages.\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page)\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_MENU\"\n    });\n\n    return (\n        <>\n            <header>\n                {page === \"players\" || page === \"matches\" ?\n                <h1 className=\"stickyHeader\"\n                onClick={ goToPage }\n                style={{cursor: \"pointer\"}}\n                >Main Menu</h1>\n\n                :\n\n                <h1 className=\"title\"\n                    onClick={ goToPage }\n                    style={{cursor: \"pointer\"}}\n                    >Teemz</h1>\n\n                }\n            </header>\n        </>\n    )\n    }\n\nexport default Header;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './data/store';\nimport Header from './components/Header';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= { store }>\n      <Header />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}