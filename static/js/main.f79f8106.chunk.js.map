{"version":3,"sources":["assets/loadingIcon.gif","components/Loading/Loading.js","data/axios-config.js","components/Loading/index.js","data/actions/api.js","components/TeamCard/ScoringComponents/ScoreT1/Score.js","components/TeamCard/ScoringComponents/ScoreT1/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/index.js","data/actions/state.js","components/TeamCard/ScoringComponents/ScoreCardT1.js","components/TeamCard/TeamComponents/RowPlayer.js","components/TeamCard/TeamComponents/PlayersCardT1/PlayersCardT1.js","components/TeamCard/TeamComponents/PlayersCardT1/index.js","components/TeamCardT1/TeamCardT1.js","components/TeamCardT1/index.js","components/TeamCard/ScoringComponents/ScoreT2/Score.js","components/TeamCard/ScoringComponents/ScoreT2/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/index.js","components/TeamCard/ScoringComponents/ScoreCardT2.js","components/TeamCard/TeamComponents/PlayersCardT2/PlayersCardT2.js","components/TeamCard/TeamComponents/PlayersCardT2/index.js","components/TeamCardT2/TeamCardT2.js","components/TeamCardT2/index.js","pages/GeneratingMatch.js","components/Button.js","components/GeneratePage/GeneratePage.js","components/GeneratePage/index.js","components/GenerateTeams.js","components/SeePlayers.js","components/SeeMatches.js","components/AddPlayer/AddPlayer.js","components/AddPlayer/index.js","components/PlayerAdded/PlayerAdded.js","components/PlayerAdded/index.js","pages/Menu.js","data/TeamGeneratingLogic/logic/playerWR.js","components/PlayerComponents/PlayerCard.js","pages/SeePlayersPage.js","components/NavToMenu.js","pages/GameSavedPage.js","components/LoadingMatches/LoadingMatches.js","components/LoadingMatches/index.js","components/MatchCard.js","pages/SeeMatchesPage.js","App/App.js","App/index.js","reportWebVitals.js","data/ScoringCardsLogic/incReducerT1.js","data/ScoringCardsLogic/decReducerT1.js","data/ScoringCardsLogic/incReducerT2.js","data/ScoringCardsLogic/decReducerT2.js","data/NavigationLogic/navGenPageReducer.js","data/NavigationLogic/navMenuPageReducer.js","data/NavigationLogic/navPlayersPageReducer.js","data/NavigationLogic/navMatchesPageReducer.js","data/TeamGeneratingLogic/logic/setTeamMembers.js","data/TeamGeneratingLogic/logic/fisherYatesShuffle.js","data/TeamGeneratingLogic/logic/compareByWR.js","data/TeamGeneratingLogic/logic/selectedPlayers.js","data/TeamGeneratingLogic/setTeamsReducer.js","data/NavigationLogic/navSavedGamePageReducer.js","data/InputLogic/updateTeamOneNameReducer.js","data/InputLogic/updateTeamTwoNameReducer.js","data/reducer.js","data/Initial.js","data/store.js","components/Header.js","index.js"],"names":["Loading","handleLoad","this","props","children","loaded","className","src","loadingIcon","alt","Component","axios","create","baseURL","headers","Accept","connect","dispatch","get","then","data","type","payload","Score","team_one_score","state","team_two_score","ScoreButtons","onIncrement","onDecrement","onClick","ScoreCardT1","ScoreT1","ScoreButtonsT1","RowPlayer","player","name","PlayersCardT1","team_one_players","map","id","Players","TeamCardT1","handleName","e","setState","team_one_name","target","value","handleSubmit","bind","onChange","maxLength","minLength","console","log","updateTeamOneName","ScoreCardT2","ScoreT2","ScoreButtonsT2","PlayersCardT2","team_two_players","TeamCardT2","team_two_name","updateTeamTwoName","GeneratingMatch","Button","handleClick","label","GeneratePage","post","team_one","team_two","forEach","patch","wins","losses","postMatch","GenerateTeams","useDispatch","SeePlayers","SeeMatches","AddPlayer","currentTarget","preventDefault","onSubmit","required","ref","input","focus","disabled","length","PlayerAdded","playersAdded","Menu","playerWR","PlayerCard","toFixed","players","style","margin","NavToMenu","GameSavedPage","LoadingMatches","MatchCard","match","matches","App","page","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","incReducerT1","decReducerT1","incReducerT2","decReducerT2","navGenPageReducer","navMenuPageReducer","navPlayersPageReducer","navMatchesPageReducer","setTeamMembers","playerPool","firstOfT1","firstOfT2","push","i","fisherYatesShuffle","j","Math","floor","random","compareByWR","player1","player2","player1WR","player2WR","selectedPlayers","teams_size","allPLayers","sort","setTeamsReducer","teams","navSavedGamePageReducer","updateTeamOneNameReducer","updateTeamTwoNameReducer","reducer","action","initial","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","useSelector","goToPage","cursor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f79f8106.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loadingIcon.04f89c1e.gif\";","import { Component } from 'react';\nimport loadingIcon from '../../assets/loadingIcon.gif';\n\nclass Loading extends Component {\n    componentDidMount() {\n        const { handleLoad } = this.props;\n        handleLoad();\n    }\n    \n    render() {\n        const { children, loaded } = this.props;\n\n        return loaded ? children : (\n            <div className=\"teamCard_container\">\n                <p className=\"title\">Loading...</p>\n                <img className=\"loadingIcon\" src={ loadingIcon } alt=\"CGI football spinning\" />\n            </div>\n        );\n    }\n}\n\nexport default Loading;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://peaceful-sea-21894.herokuapp.com/api/\",\n    headers: {\n        Accept: \"application/json\",\n    }\n})","import { connect } from 'react-redux';\nimport Loading from './Loading';\nimport { getPlayers } from '../../data/actions/api';\n\nconst mapStatetoProps = ({ loaded }) => {\n    return {\n        loaded: loaded,\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleLoad: () => dispatch(getPlayers()),\n    }\n}\n\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Loading)","import axios from '../../data/axios-config';\n\nexport const getPlayers = () => {\n    return (dispatch) => {\n        axios.get('/players').then((data) => {\n            dispatch({type: \"PLAYERS_LOADED\", payload: data.data.data})\n        })\n        .then(() => dispatch({type: \"GENERATE_TEAMS\"}));\n    };\n};\n\nexport const getMatches = () => {\n    return (dispatch) => {\n        axios.get('/games').then((data) => {\n            console.log(data.data.data);\n            dispatch({type: \"MATCHES_LOADED\", payload: data.data.data})\n        })\n        .then(() => dispatch({type: \"GENERATE_MATCHES\"}));\n    };\n};\n\nexport const postMatch = ({ team_one_name, team_one_score, team_two_name, team_two_score, team_one_players, team_two_players }) => {\n    return (dispatch) => {\n        axios.post('/games', {\n            team_one: team_one_name,\n            team_one_score: team_one_score,\n            team_two: team_two_name,\n            team_two_score: team_two_score,\n\n        }).then(()=>console.log(team_one_players, team_one_score)).then(() => {    \n\n            // post request to update player one \n            team_one_players.forEach(player => {\n                if (team_one_score > team_two_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins + 1,\n                        losses: player.losses,\n                    })\n                } else if (team_two_score > team_one_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins,\n                        losses: player.losses + 1,\n                    })\n                }\n            })}\n        ).then(() => {\n\n            // post request to update player two\n            team_two_players.forEach(player => {\n                if (team_one_score > team_two_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins + 1,\n                        losses: player.losses,\n                    })\n                } else if (team_two_score > team_one_score) {\n                    axios.patch(`/players/${player.id}`, {\n                        name: player.name,\n                        wins: player.wins,\n                        losses: player.losses + 1,\n                    })\n                }\n            })\n        }).then(() => dispatch({type: \"NAV_TO_SAVED_GAME\"}));\n    }\n}\n\nexport const postPlayer = (player) => {\n    console.log(player);\n    return (dispatch) => {\n        axios.post('/players', {\n            name: player.name,\n        }).then(() => dispatch({type: \"PLAYER_ADDED\"}))\n    };\n}","const Score = ({ team_one_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_one_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_two_score: state.team_one_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement }) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamOne, decTeamOne } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamOne()),\n    onDecrement: () => dispatch(decTeamOne()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","// Team one score\nexport const incTeamOne = () => {\n    return {\n        type: \"INC_TEAM_ONE\",\n    }\n}\n\nexport const decTeamOne = () => {\n    return {\n        type: \"DEC_TEAM_ONE\",\n    }\n}\n\n// Team two score\nexport const incTeamTwo = () => {\n    return {\n        type: \"INC_TEAM_TWO\",\n    }\n}\n\nexport const decTeamTwo = () => {\n    return {\n        type: \"DEC_TEAM_TWO\",\n    }\n}\n\nexport const updateTeamOneName = (data) => {\n    console.log(data);\n    return {\n        type: \"UPDATE_TEAM_ONE\",\n        data: data,\n    }\n}\n\nexport const updateTeamTwoName = (data) => {\n    console.log(data);\n    return {\n        type: \"UPDATE_TEAM_TWO\",\n        data: data,\n    }\n}","import ScoreT1 from \"../ScoringComponents/ScoreT1\";\nimport ScoreButtonsT1 from \"../ScoringComponents/ScoreButtonsT1\";\n\nconst ScoreCardT1 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>   \n        <ScoreT1 />\n        <ScoreButtonsT1 />\n    </>\n);\n\nexport default ScoreCardT1;","const RowPlayer = (player) => (\n    <>\n        <div className=\"teamCard_playerName\">\n            <p>{ player.name }</p>\n        </div>\n\n    </>\n);\n\nexport default RowPlayer;\n","import RowPlayer from '../RowPlayer';\n\nconst PlayersCardT1 = ({team_one_players}) => {\n\n    return (\n        <div>\n        {\n            team_one_players.map(player => (\n                <RowPlayer name = { player.name } key = { player.id }/>\n            ))\n        }\n        </div>\n    )\n\n}\n\nexport default PlayersCardT1;\n\n","import { connect } from 'react-redux';\nimport Players from './PlayersCardT1';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_one_players: state.team_one_players,\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","import ScoreCard from '../TeamCard/ScoringComponents/ScoreCardT1';\nimport PlayersCardT1 from '../TeamCard/TeamComponents/PlayersCardT1';\nimport { Component } from 'react';\n\n// class based component - state required\nclass TeamCardT1 extends Component {\n    constructor(props) {\n        super(props);\n\n        // local state\n        this.state = {\n            team_one_name: \"Team 1\",\n        };\n\n        // bind events\n        this.handleName = this.handleName.bind(this);\n    };\n\n    handleName = e => {\n        this.setState({\n            ...this.state,\n            team_one_name: e.target.value\n        });\n        this.props.handleSubmit(e.target.value);\n    };\n\n\n    render() {\n        const { team_one_name } = this.state;\n\n        return (\n            <>\n            <div className=\"teamCard_container\">\n                <input\n                type=\"text\"\n                value={team_one_name}\n                onChange={this.handleName}\n                maxLength=\"35\"\n                minLength=\"2\"\n                className=\"teamCard_teamName\" />\n        \n                <PlayersCardT1 />\n                <ScoreCard />\n            </div>\n        </>\n        )\n    };\n}\n\nexport default TeamCardT1;","import { connect } from 'react-redux';\nimport { updateTeamOneName } from '../../data/actions/state.js';\nimport TeamCardT1 from './TeamCardT1';\n\n// State\nconst mapStateToProps = ({ team_one_name }) => {\n    return {\n        team_one_name,\n    };\n};\n\n// Dispatch \nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSubmit: (data) => { dispatch(updateTeamOneName(data)) }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamCardT1);","const Score = ({ team_two_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_two_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_two_score: state.team_two_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement}) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamTwo, decTeamTwo } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamTwo()),\n    onDecrement: () => dispatch(decTeamTwo()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","import ScoreT2 from \"./ScoreT2\";\nimport ScoreButtonsT2 from \"./ScoreButtonsT2\";\n\nconst ScoreCardT2 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>\n\n        <ScoreT2 />\n        <ScoreButtonsT2 />\n    </>\n);\n\nexport default ScoreCardT2;","import RowPlayer from '../RowPlayer';\n\nconst PlayersCardT2 = ({ team_two_players }) => {\n    \n    return (\n        <ul>\n        {\n            team_two_players.map(player => (\n                <RowPlayer name = { player.name } key = { player.id } />\n            ))\n        }\n        </ul>\n    )\n\n}\n\nexport default PlayersCardT2;","import { connect } from 'react-redux';\nimport Players from './PlayersCardT2';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_two_players: state.team_two_players\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","import ScoreCard from '../TeamCard/ScoringComponents/ScoreCardT2';\nimport PlayersCardT2 from '../TeamCard/TeamComponents/PlayersCardT2';\nimport { Component } from 'react';\n\n// class based component - state required\nclass TeamCardT2 extends Component {\n    constructor(props) {\n        super(props);\n\n        // local state\n        this.state = {\n            team_two_name: \"Team 2\",\n        };\n\n        // bind events\n        this.handleName = this.handleName.bind(this);\n    };\n\n    handleName = e => {\n        this.setState({\n            ...this.state,\n            team_two_name: e.target.value\n        });\n        this.props.handleSubmit(e.target.value);\n    };\n\n\n    render() {\n        const { team_two_name } = this.state;\n\n        return (\n            <>\n            <div className=\"teamCard_container\">\n                <input\n                type=\"text\"\n                value={team_two_name}\n                onChange={this.handleName}\n                maxLength=\"35\"\n                minLength=\"2\"\n                className=\"teamCard_teamName\" />\n        \n                <PlayersCardT2 />\n                <ScoreCard />\n            </div>\n        </>\n        )\n    };\n}\n\nexport default TeamCardT2;","import { connect } from 'react-redux';\nimport { updateTeamTwoName } from '../../data/actions/state.js';\nimport TeamCardT2 from './TeamCardT2';\n\n// State\nconst mapStateToProps = ({ team_two_name }) => {\n    return {\n        team_two_name,\n    };\n};\n\n// Dispatch \nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSubmit: (data) => { dispatch(updateTeamTwoName(data)) }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamCardT2);","import Loading from '../components/Loading';\nimport TeamCardT1 from '../components/TeamCardT1';\nimport TeamCardT2 from '../components/TeamCardT2';\n\n\nconst GeneratingMatch = () => { \n    return ( \n    <>\n        <Loading>\n            <TeamCardT1 />\n            <TeamCardT2 />\n        </Loading>\n\n\n    </>\n);\n}\n\nexport default GeneratingMatch;","const Button = ({handleClick, label}) => {\n    return (<>\n        <button className=\"doButton\" onClick={ handleClick }>{ label }</button>\n    </>)\n}\n\nexport default Button;","import GeneratingMatch from '../../pages/GeneratingMatch';\nimport Button from \"../Button\";\n\nlet GeneratePage = ({ handleClick, data }) => {\n    return (\n        <>\n            <GeneratingMatch />\n\n            <Button\n            handleClick={() => {\n                handleClick(data)\n            }}\n            label=\"Save Game!\"\n            type=\"button\"\n            />\n        </>\n    )\n}\n\nexport default GeneratePage;","import { connect } from 'react-redux';\nimport GeneratePage from './GeneratePage';\nimport { postMatch } from '../../data/actions/api';\n\nconst mapStatetoProps = (state) => {\n    return {\n        data: {\n            team_one_name: state.team_one_name,\n            team_one_score: state.team_one_score,\n            team_two_name: state.team_two_name,\n            team_two_score: state.team_two_score,\n            team_one_players: state.team_one_players,\n            team_two_players: state.team_two_players,\n        }\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleClick: (data) => postMatch(data)(dispatch),\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(GeneratePage)","import { useDispatch } from \"react-redux\";\n\nconst GenerateTeams = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_GENERATE\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    Generate Teams\n                </button>\n        </>\n        )\n    }\n\nexport default GenerateTeams;\n\n\n\n\n","import { useDispatch } from \"react-redux\";\n\nconst SeePlayers = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_PLAYERS\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    See Players\n                </button>\n        </>\n        )\n    }\n\nexport default SeePlayers;\n\n\n\n\n","import { useDispatch } from \"react-redux\";\n\nconst SeeMatches = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_MATCHES\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    See Matches\n                </button>\n        </>\n        )\n    }\n\nexport default SeeMatches;\n","import { Component } from 'react';\n\n// class based component - state required\nclass AddPlayer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n        };\n\n        this.handleName = this.handleName.bind(this);\n    };\n\n    // Name Input\n    handleName = e => {\n        this.setState({\n            name: e.currentTarget.value\n        });\n    };\n\n    // handle form submit\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleClick({ ...this.state });\n\n        this.setState({\n            name: \"\",\n        });\n    };\n\n    render() {\n        const { name } = this.state;\n\n        return (\n            <form\n                onSubmit={this.handleSubmit}>\n                <div className=\"menu_playerContaier\">\n                        <input\n                            className=\"menu_inputField\"\n                            type=\"text\"\n                            value={name}\n                            onChange={this.handleName}\n                            maxLength=\"25\"\n                            minLength=\"2\"\n                            required\n                            ref={function (input) {\n                                if (input != null) {\n                                    input.focus();\n                                }\n                            }}\n                        />\n                    <button disabled={name.length <= 2} type=\"submit\" className=\"doButton\">Add Player</button>\n                </div>\n            </form>\n        )\n    };\n};\n\nexport default AddPlayer;","import { connect } from 'react-redux';\nimport AddPlayer from './AddPlayer';\nimport { postPlayer } from '../../data/actions/api';\n\n// Dispatch \nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClick: (data) => dispatch(postPlayer(data)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(AddPlayer)","const PlayerAdded = ({ playersAdded }) => {\n    if (playersAdded > 0) {\n        return (\n            <>  \n                <p className=\"playerAdded\">Player Added!</p>\n            </>\n        )\n    }\n    return <></>;\n};\n\nexport default PlayerAdded;\n","import { connect } from \"react-redux\";\nimport PlayerAdded from \"./PlayerAdded\";\n\nlet mapStateToProps = (state) => {\n    return {\n        playersAdded: state.playersAdded,\n    };\n};\n\nexport default connect(mapStateToProps)(PlayerAdded);\n\n","import GenerateTeams from '../components/GenerateTeams';\nimport SeePlayers from '../components/SeePlayers';\nimport SeeMatches from '../components/SeeMatches';\nimport AddPlayer from '../components/AddPlayer';\nimport PlayerAdded from '../components/PlayerAdded';\n\n\nlet Menu = () => (\n    <>\n    <nav className=\"menu\">\n        <GenerateTeams />\n        <SeePlayers />\n        <SeeMatches />\n        <AddPlayer />\n        <PlayerAdded />\n\n    </nav>\n    \n    </>\n);   \n\nexport default Menu;","// This allows us to calculate the win rate of individual players, our means to measure skill\nlet playerWR = (player) => player.wins === 0 ? -(player.losses) : player.wins / (player.wins + player.losses);\n\nexport default playerWR;","import playerWR from '../../data/TeamGeneratingLogic/logic/playerWR';\n\nconst PlayerCard = (player) => (\n    <>\n        <div className=\"playerCard_container\">\n            <h2 className=\"playerCard_playerName\">{ player.name }</h2>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Wins</p>\n                <p className=\"playerCard_data\">{ player.wins }</p>\n            </div>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Losses</p>\n                <p className=\"playerCard_data\">{ player.losses }</p>\n            </div>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Win Rate:</p>\n                <p className=\"playerCard_data playerWR\">{ playerWR(player).toFixed(2) }</p>\n            </div>\n        </div>\n\n    </>\n);\n\nexport default PlayerCard;\n","import PlayerCard from '../components/PlayerComponents/PlayerCard';\nimport { connect} from 'react-redux';\nimport Loading from '../components/Loading';\n\nconst SeePlayersPage = ({players}) => (\n    <>\n        <Loading>\n            <div style={{margin: \"100px\"}} />\n            {players.map(player => {\n                    return  <PlayerCard \n                    name = {player.name}\n                    wins = { player.wins }\n                    losses = { player.losses }\n                    key = { player.id }\n                    />\n                })\n            }\n        </Loading>\n    </>\n)\n\nconst mapStatetoProps = (state) => ({players: state.players});\n\nexport default connect(mapStatetoProps)(SeePlayersPage);","import { useDispatch } from \"react-redux\";\n\nconst NavToMenu = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_MENU\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    Main Menu\n                </button>\n        </>\n        )\n    }\n\nexport default NavToMenu;","import SeePlayers from '../components/SeePlayers';\nimport NavToMenu from '../components/NavToMenu';\nimport SeeMatches from '../components/SeeMatches';\n\nlet GameSavedPage = () => (\n    <nav className=\"playerCard_container\">\n        <div className=\"menu\">\n            <h2 className=\"title\">Game Saved!</h2>\n            <NavToMenu />\n            <SeePlayers/>\n            <SeeMatches />\n        </div>\n    </nav>\n)\n\n\nexport default GameSavedPage;","import { Component } from 'react';\nimport loadingIcon from '../../assets/loadingIcon.gif';\n\nclass LoadingMatches extends Component {\n    componentDidMount() {\n        const { handleLoad } = this.props;\n        handleLoad();\n    }\n    \n    render() {\n        const { children, loaded } = this.props;\n\n        return loaded ? children : (\n            <div className=\"teamCard_container\">\n                <p className=\"title\">Loading...</p>\n                <img className=\"loadingIcon\" src={ loadingIcon } alt=\"CGI football spinning\" />\n            </div>\n        );\n    }\n}\n\nexport default LoadingMatches;","import { connect } from 'react-redux';\nimport LoadingMatches from './LoadingMatches';\nimport { getMatches } from '../../data/actions/api';\n\nconst mapStatetoProps = ({ loaded }) => {\n    return {\n        loaded: loaded,\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleLoad: () => dispatch(getMatches()),\n    }\n}\n\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(LoadingMatches)","const MatchCard = (match) => (\n    <>\n        <div className=\"matchCard_container\">\n            <div className=\"matchCard_dataRow\">\n                <p className=\"matchCard_dataLabel\">{ match.team_one }</p>\n                <p className=\"matchCard_data\">{ match.team_one_score }</p>\n            </div>\n\n            <div className=\"matchCard_dataRow\">\n                <p className=\"matchCard_dataLabel\">{ match.team_two }</p>\n                <p className=\"matchCard_data\">{ match.team_two_score }</p>\n            </div>\n        </div>\n    </>\n);\n\nexport default MatchCard;","import { connect} from 'react-redux';\nimport Loading from '../components/LoadingMatches';\nimport MatchCard from '../components/MatchCard';\n\nconst SeeMatchesPage = ({matches}) => (\n    <>\n        <Loading>\n            <div style={{margin: \"100px\"}} />\n            {matches.map(match => {\n                    return  <MatchCard \n                    team_one = { match.team_one }\n                    team_one_score = { match.team_one_score }\n                    team_two = { match.team_two }\n                    team_two_score = { match.team_two_score }\n                    key = { match.id }\n                    />\n                })\n            }\n        </Loading>\n    </>\n)\n\nconst mapStatetoProps = (state) => ({matches: state.matches});\n\nexport default connect(mapStatetoProps)(SeeMatchesPage);","import GeneratePage from '../components/GeneratePage';\nimport Menu from '../pages/Menu';\nimport SeePlayersPage from '../pages/SeePlayersPage';\nimport GameSavedPage from '../pages/GameSavedPage';\nimport SeeMatchesPage from '../pages/SeeMatchesPage';\n\nconst App = ({ page }) => {\n\n    switch(page) {\n        case \"generate\": return <GeneratePage />; // page that shows teams\n        case \"menu\": return <Menu /> ;\n        case \"players\": return <SeePlayersPage /> ;\n        case \"game_saved\": return <GameSavedPage /> ;\n        case \"matches\": return <SeeMatchesPage /> ;\n        default: return <Menu />;\n    }\n}\n\n\nexport default App;","import { connect } from \"react-redux\";\nimport App from \"./App\";\n\nlet mapStateToProps = (state) => {\n    return {\n        page: state.page,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const incReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score + 1\n    };\n}\n\nexport default incReducerT1;","const decReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score > 0 ? state.team_one_score - 1 : state.team_one_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT1;","const incReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score + 1\n    };\n}\n\nexport default incReducerT2;","const decReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score > 0 ? state.team_two_score - 1 : state.team_two_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT2;","const navGenPageReducer = (state) => {\n    return {\n        ...state,\n        page: \"generate\",\n    }\n}\n\nexport default navGenPageReducer;","const navMenuPageReducer = (state) => {\n    return {\n        ...state,\n        page: \"menu\",\n    }\n}\n\nexport default navMenuPageReducer;","const navPlayersPageReducer = (state) => {\n    return {\n        ...state,\n        page: \"players\",\n    }\n}\n\nexport default navPlayersPageReducer;","const navMatchesPageReducer = (state,) => {\n    return {\n        ...state,\n        page: \"matches\",\n        loaded: true,\n    }\n}\n\nexport default navMatchesPageReducer;","/*\nGENERATING THE TWO TEAMS\nThe top two players are passed into individual arrays. then second best player gets slightly higher level teammates than the best player.\n*/\nlet setTeamMembers = (playerPool) => { // playerPool = [{p1},{p2}..{pn}]\n    let firstOfT1 = playerPool[0];\n    let firstOfT2 = playerPool[1];\n\n    // Pass highest level player into team 1\n    let team_one_players = []\n    team_one_players.push(firstOfT1);\n\n    // pass second highest level player into team 2\n    let team_two_players = [];\n    team_two_players.push(firstOfT2);\n\n\n    // odd indexed players go into team 1, and even indexed players go into team two, excluding the top two players\n    for (let i = 2; i < (playerPool.length); i += 1) {\n        i % 2 === 0 ? team_two_players.push(playerPool[i]) : team_one_players.push(playerPool[i]);\n    }\n\n    // we return the balanced teams as an object containins the two team arrays\n    return {\n        team_one_players: team_one_players,\n        team_two_players: team_two_players,\n    };\n}\n\nexport default setTeamMembers;\n","// Fisher-Yates shuffle to shuffle players array into random order, and is considered an efficient way of shuffling an array.\nlet fisherYatesShuffle = (players) => {\n    for (let i = players.length - 1; i > 0; i -= 1) {\n        let j = Math.floor(Math.random() * (i + 1));\n\n        [players[i], players[j]] = [players[j], players[i]];\n    }\n    return players;\n}\n\nexport default fisherYatesShuffle;","// The re-ordering logic required inside .sort() for reordering the players in terms of win rate\nimport playerWR from './playerWR';\n\nlet compareByWR = (player1, player2) => {\n    let player1WR = playerWR(player1);\n    let player2WR = playerWR(player2);\n\n    if (player1WR < player2WR) {\n        return 1;\n    } else if (player1WR > player2WR) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nexport default compareByWR;","import fisherYatesShuffle from './fisherYatesShuffle';\nimport compareByWR from './compareByWR';\n\n/*\nWe're shuffling the players and then taking all the players needed from the beginning of the array, and keeping them in a new array.\nAfter this we sort the array so that higher win rate players (the better ones) are at the beginning of the array, and then return irt\n*/\nlet selectedPlayers = (teams_size, players) => {\n    // randomise playerbase\n    let allPLayers = [...fisherYatesShuffle(players)];\n    // array of players to be returned at the end of this function\n    let playerPool = [];\n\n    // push first ten players of the shuffled array into playerPool, as this will be the pool of players we'll get teams from\n    for (let i = 0; i < teams_size; i += 1) {\n        playerPool.push(allPLayers[i]);\n    }\n\n    // sort the array so tghat high skill players are at the beginning and return it.\n    return playerPool.sort(compareByWR);\n}\n\nexport default selectedPlayers;","// import { useSelector } from \"react-redux\";\nimport setTeamMembers from './logic/setTeamMembers';\nimport selectedPlayers from './logic/selectedPlayers';\n// import { getPlayers } from '../actions/api';\n\n\n\nconst setTeamsReducer = (state) => {\n    let players =  state.players;\n    let teams_size = state.teams_size;\n\n    // Select required players and generate two balanced teams\n    let playerPool = selectedPlayers(teams_size, players);\n    let teams = setTeamMembers(playerPool);\n    return {\n        ...state,\n        team_one_players: teams.team_one_players,\n        team_two_players: teams.team_two_players,\n    }\n}\n\nexport default setTeamsReducer;","const navSavedGamePageReducer = (state) => {\n    return {\n        ...state,\n        page: \"game_saved\",\n    }\n}\n\nexport default navSavedGamePageReducer;","const updateTeamOneNameReducer = (state, data) => {\n    return {\n        ...state,\n        team_one_name: data.data,\n    };\n};\n\nexport default updateTeamOneNameReducer;","const updateTeamTwoNameReducer = (state, data) => {\n    return {\n        ...state,\n        team_two_name: data.data,\n    };\n};\n\nexport default updateTeamTwoNameReducer;","// Control Team One Scoring\nimport incReducerT1 from './ScoringCardsLogic/incReducerT1';\nimport decReducerT1 from './ScoringCardsLogic/decReducerT1';\n\n// Control Team Two Scoring\nimport incReducerT2 from './ScoringCardsLogic/incReducerT2';\nimport decReducerT2 from './ScoringCardsLogic/decReducerT2';\n\n// Navigate Pages\nimport navGenPageReducer from \"./NavigationLogic/navGenPageReducer\";\nimport navMenuPageReducer from './NavigationLogic/navMenuPageReducer';\nimport navPlayersPageReducer from './NavigationLogic/navPlayersPageReducer';\nimport navMatchesPageReducer from './NavigationLogic/navMatchesPageReducer';\n\n// Generate Teams\nimport setTeamsReducer from './TeamGeneratingLogic/setTeamsReducer';\nimport navSavedGamePageReducer from './NavigationLogic/navSavedGamePageReducer';\n\n// Update Team Names\nimport updateTeamOneNameReducer from './InputLogic/updateTeamOneNameReducer';\nimport updateTeamTwoNameReducer from './InputLogic/updateTeamTwoNameReducer';\n\n\n\nlet reducer = (state, action) => {\n    switch (action.type) {\n\n        // Team One Scoring\n        case \"INC_TEAM_ONE\": return incReducerT1(state);\n        case \"DEC_TEAM_ONE\": return decReducerT1(state);\n\n        // Team Two Scoring\n        case \"INC_TEAM_TWO\": return incReducerT2(state);\n        case \"DEC_TEAM_TWO\": return decReducerT2(state);\n\n        // Navigate Pages\n        case \"NAV_TO_MENU\": return navMenuPageReducer(state); \n        case \"NAV_TO_GENERATE\": return navGenPageReducer(state);\n        case \"NAV_TO_PLAYERS\": return navPlayersPageReducer(state);\n        case \"NAV_TO_MATCHES\": return navMatchesPageReducer (state);\n        case \"NAV_TO_SAVED_GAME\": return navSavedGamePageReducer(state);\n\n        // Generate Teams\n        case \"PLAYERS_LOADED\": return {...state, players: action.payload, loaded: true};\n        case \"GENERATE_TEAMS\": return setTeamsReducer(state);\n\n        // Set Teams\n        case \"MATCHES_LOADED\": return {...state, matches: action.payload, loaded: true};\n\n        // Handling Input data\n        case \"UPDATE_TEAM_ONE\": return updateTeamOneNameReducer(state, action);\n        case \"UPDATE_TEAM_TWO\": return updateTeamTwoNameReducer(state, action);\n        case \"PLAYER_ADDED\": return {...state, playersAdded: state.playersAdded+1};\n        \n        default: return state;\n    }\n};\n\nexport default reducer;","// Initial state\nconst initial = {\n    page: \"menu\",\n    loaded: false,\n\n    team_one_score: 0,\n    team_two_score: 0,\n\n    team_one_name: \"Team 1\",\n    team_two_name: \"Team 2\",\n\n    teams_size: 10,\n\n    players: [],\n    \n    team_one_players: [],\n    team_two_players: [],\n\n    matches: [],\n    \n    player: {\n        name: \"\",\n        wins: 0,\n        losses: 0,\n    },\n\n    playersAdded: 0,\n\n};\n\nexport default initial;\n\n","import reducer from './reducer';\nimport initial from './Initial';\n\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import { useDispatch, useSelector } from \"react-redux\";\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page)\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_MENU\"\n    });\n\n    return (\n        <>\n            <header>\n                {page === \"players\" || page === \"matches\" ?\n                <h1 className=\"stickyHeader\"\n                onClick={ goToPage }\n                style={{cursor: \"pointer\"}}\n                >Main Menu</h1>\n\n                :\n\n                <h1 className=\"title\"\n                    onClick={ goToPage }\n                    style={{cursor: \"pointer\"}}\n                    >Teemz</h1>\n\n                }\n            </header>\n        </>\n    )\n    }\n\nexport default Header;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './data/store';\nimport Header from './components/Header';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= { store }>\n      <Header />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}