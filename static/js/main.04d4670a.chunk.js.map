{"version":3,"sources":["components/TeamCard/ScoringComponents/ScoreT1/Score.js","components/TeamCard/ScoringComponents/ScoreT1/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/index.js","data/actions/state.js","components/TeamCard/ScoringComponents/ScoreCardT1.js","data/Initial.js","components/TeamCard/TeamComponents/RowPlayer.js","components/TeamCard/TeamComponents/PlayersCardT1/PlayersCardT1.js","components/TeamCard/TeamComponents/PlayersCardT1/index.js","components/TeamCardT1.js","components/TeamCard/TeamComponents/PlayersCardT2/PlayersCardT2.js","components/TeamCard/TeamComponents/PlayersCardT2/index.js","components/TeamCard/ScoringComponents/ScoreT2/Score.js","components/TeamCard/ScoringComponents/ScoreT2/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/index.js","components/TeamCard/ScoringComponents/ScoreCardT2.js","components/TeamCardT2.js","assets/loadingIcon.gif","components/Loading/Loading.js","data/axios-config.js","components/Loading/index.js","data/actions/api.js","pages/GeneratingMatch.js","components/Button.js","components/GeneratePage/GeneratePage.js","components/GeneratePage/index.js","components/GenerateTeams.js","components/SeePlayers.js","pages/Menu.js","data/TeamGeneratingLogic/logic/playerWR.js","components/PlayerComponents/PlayerCard.js","pages/SeePlayersPage.js","App/App.js","App/index.js","reportWebVitals.js","data/ScoringCardsLogic/incReducerT1.js","data/ScoringCardsLogic/decReducerT1.js","data/ScoringCardsLogic/incReducerT2.js","data/ScoringCardsLogic/decReducerT2.js","data/NavigationLogic/navGenPageReducer.js","data/NavigationLogic/navMenuPageReducer.js","data/NavigationLogic/navPlayersPageReducer.js","data/TeamGeneratingLogic/logic/setTeamMembers.js","data/TeamGeneratingLogic/logic/fisherYatesShuffle.js","data/TeamGeneratingLogic/logic/compareByWR.js","data/TeamGeneratingLogic/logic/selectedPlayers.js","data/TeamGeneratingLogic/setTeamsReducer.js","data/reducer.js","data/store.js","components/Header.js","index.js"],"names":["Score","team_one_score","className","connect","state","ScoreButtons","onIncrement","onDecrement","onClick","dispatch","type","ScoreCardT1","ScoreT1","ScoreButtonsT1","initial","page","loaded","team_two_score","team_one_name","team_two_name","teams_size","players","team_one_players","team_two_players","RowPlayer","player","name","PlayersCardT1","map","id","Players","TeamCardT1","PlayersCardT2","ScoreCardT2","ScoreT2","ScoreButtonsT2","Loading","handleLoad","this","props","children","src","loadingIcon","alt","Component","axios","create","baseURL","headers","Accept","get","then","data","payload","GeneratingMatch","TeamCardT2","Button","handleClick","label","GeneratePage","post","team_one","team_two","postMatch","GenerateTeams","useDispatch","SeePlayers","Menu","playerWR","wins","losses","PlayerCard","toFixed","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","incReducerT1","decReducerT1","incReducerT2","decReducerT2","navGenPageReducer","navMenuPageReducer","navPlayersPageReducer","setTeamMembers","playerPool","firstOfT1","firstOfT2","push","i","length","fisherYatesShuffle","j","Math","floor","random","compareByWR","player1","player2","player1WR","player2WR","selectedPlayers","allPLayers","sort","setTeamsReducer","teams","reducer","action","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","useSelector","goToPage","style","cursor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04d4670a.chunk.js","sourcesContent":["const Score = ({ team_one_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_one_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_one_score: state.team_one_score,\n    };\n};\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement }) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamOne, decTeamOne } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamOne()),\n    onDecrement: () => dispatch(decTeamOne()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","// Team one score\nexport const incTeamOne = () => {\n    return {\n        type: \"INC_TEAM_ONE\",\n    }\n}\n\nexport const decTeamOne = () => {\n    return {\n        type: \"DEC_TEAM_ONE\",\n    }\n}\n\n// Team two score\nexport const incTeamTwo = () => {\n    return {\n        type: \"INC_TEAM_TWO\",\n    }\n}\n\nexport const decTeamTwo = () => {\n    return {\n        type: \"DEC_TEAM_TWO\",\n    }\n}","import ScoreT1 from \"../ScoringComponents/ScoreT1\";\nimport ScoreButtonsT1 from \"../ScoringComponents/ScoreButtonsT1\";\n\nconst ScoreCardT1 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>   \n        <ScoreT1 />\n        <ScoreButtonsT1 />\n    </>\n);\n\nexport default ScoreCardT1;","// Initial state\nconst initial = {\n    page: \"menu\",\n    loaded: false,\n\n    team_one_score: 0,\n    team_two_score: 0,\n\n    team_one_name: \"Team 1\",\n    team_two_name: \"Team 2\",\n\n    teams_size: 10,\n\n    players: [],\n    \n    team_one_players: [],\n    team_two_players: [],\n\n};\n\nexport default initial;\n\n","const RowPlayer = (player) => (\n    <>\n        <div className=\"teamCard_playerName\">\n            <p>{ player.name }</p>\n        </div>\n\n    </>\n);\n\nexport default RowPlayer;\n","import RowPlayer from '../RowPlayer';\n\nconst PlayersCardT1 = ({team_one_players}) => {\n\n    return (\n        <div>\n        {\n            team_one_players.map(player => (\n                <RowPlayer name = { player.name } key = { player.id }/>\n            ))\n        }\n        </div>\n    )\n\n}\n\nexport default PlayersCardT1;\n\n","import { connect } from 'react-redux';\nimport Players from './PlayersCardT1';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_one_players: state.team_one_players,\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","import ScoreCard from './TeamCard/ScoringComponents/ScoreCardT1';\nimport initial from '../data/Initial';\nimport PlayersCardT1 from './TeamCard/TeamComponents/PlayersCardT1';\n\nlet TeamCardT1 = () => (\n    <>\n        <div className=\"teamCard_container\">\n            <h2 className=\"teamCard_teamName\">{ initial.team_one_name }</h2>   \n            <PlayersCardT1 />\n            <ScoreCard />\n        </div>\n    </>\n)\n\nexport default TeamCardT1;","import RowPlayer from '../RowPlayer';\n\nconst PlayersCardT2 = ({ team_two_players }) => {\n    \n    return (\n        <ul>\n        {\n            team_two_players.map(player => (\n                <RowPlayer name = { player.name } key = { player.id } />\n            ))\n        }\n        </ul>\n    )\n\n}\n\nexport default PlayersCardT2;","import { connect } from 'react-redux';\nimport Players from './PlayersCardT2';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_two_players: state.team_two_players\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","const Score = ({ team_two_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_two_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_two_score: state.team_two_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement}) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamTwo, decTeamTwo } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamTwo()),\n    onDecrement: () => dispatch(decTeamTwo()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","import ScoreT2 from \"./ScoreT2\";\nimport ScoreButtonsT2 from \"./ScoreButtonsT2\";\n\nconst ScoreCardT2 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>\n\n        <ScoreT2 />\n        <ScoreButtonsT2 />\n    </>\n);\n\nexport default ScoreCardT2;","import PlayersCardT2 from './TeamCard/TeamComponents/PlayersCardT2';\nimport ScoreCard from './TeamCard/ScoringComponents/ScoreCardT2';\nimport initial from '../data/Initial';\n\nlet TeamCardT1 = () => (\n    <>\n        <div className=\"teamCard_container\">\n            <h2 className=\"teamCard_teamName\">{ initial.team_two_name }</h2>   \n            <PlayersCardT2 />\n            <ScoreCard />\n        </div>\n    </>\n)\n\nexport default TeamCardT1;","export default __webpack_public_path__ + \"static/media/loadingIcon.04f89c1e.gif\";","import { Component } from 'react';\nimport loadingIcon from '../../assets/loadingIcon.gif';\n\nclass Loading extends Component {\n    componentDidMount() {\n        const { handleLoad } = this.props;\n        handleLoad();\n    }\n    \n    render() {\n        const { children, loaded } = this.props;\n\n        return loaded ? children : (\n            <div className=\"teamCard_container\">\n                <p className=\"title\">Loading...</p>\n                <img className=\"loadingIcon\" src={ loadingIcon } alt=\"CGI football spinning\" />\n            </div>\n        );\n    }\n}\n\nexport default Loading;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://peaceful-sea-21894.herokuapp.com/api/\",\n    headers: {\n        Accept: \"application/json\",\n    }\n})","import { connect } from 'react-redux';\nimport Loading from './Loading';\nimport { getPlayers } from '../../data/actions/api';\n\nconst mapStatetoProps = ({ loaded }) => {\n    return {\n        loaded: loaded,\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleLoad: () => dispatch(getPlayers()),\n    }\n}\n\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Loading)","import axios from '../../data/axios-config';\n\nexport const getPlayers = () => {\n    return (dispatch) => {\n        axios.get('/players').then((data) => {\n            dispatch({type: \"PLAYERS_LOADED\", payload: data.data.data})\n        })\n        .then(() => dispatch({type: \"GENERATE_TEAMS\"}));\n    };\n};\n\n\n\nexport const postMatch = ({ team_one_name, team_one_score, team_two_name, team_two_score }) => {\n    return () => {\n        axios.post('/games', {\n            team_one: team_one_name,\n            team_one_score: team_one_score,\n            team_two: team_two_name,\n            team_two_score: team_two_score,\n\n        })\n    }\n}","import TeamCardT1 from \"../components/TeamCardT1\";\nimport TeamCardT2 from \"../components/TeamCardT2\";\nimport Loading from '../components/Loading';\n// import SeePlayersPage from './SeePlayersPage';\n\nconst GeneratingMatch = () => { \n    return ( \n    <>\n        <Loading>\n            <TeamCardT1 />\n            <TeamCardT2 />\n            {/* <SeePlayersPage /> */}\n        </Loading>\n\n\n    </>\n);\n}\n\nexport default GeneratingMatch;","const Button = ({handleClick, label}) => {\n    return (<>\n        <button className=\"doButton\" onClick={ handleClick }>{ label }</button>\n    </>)\n}\n\nexport default Button;","// import GenerateTeams from \"../GenerateTeams\"\nimport GeneratingMatch from '../../pages/GeneratingMatch';\nimport Button from \"../Button\";\n\nlet GeneratePage = ({ handleClick, data }) => {\n    return (\n        <>\n            {/* <GenerateTeams /> */}\n            <GeneratingMatch />\n\n            <Button\n            handleClick={() => {\n                handleClick(data)\n            }}\n            label=\"Save Game!\"\n            type=\"button\"\n            />\n        </>\n    )\n}\n\nexport default GeneratePage;","import { connect } from 'react-redux';\nimport GeneratePage from './GeneratePage';\nimport { postMatch } from '../../data/actions/api';\n\nconst mapStatetoProps = ({ team_one_name, team_one_score, team_two_name, team_two_score }) => {\n    return {\n        data: {\n            team_one_name: team_one_name,\n            team_one_score: team_one_score,\n            team_two_name: team_two_name,\n            team_two_score: team_two_score,\n        }\n    };\n}\n\nconst mapDispatchtoProps = (dispatch) => {\n    return {\n        handleClick: (data) => postMatch(data)(dispatch),\n    }\n}\n\nexport default connect(mapStatetoProps, mapDispatchtoProps)(GeneratePage)","import { useDispatch } from \"react-redux\";\n\nconst GenerateTeams = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_GENERATE\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    Generate Teams\n                </button>\n        </>\n        )\n    }\n\nexport default GenerateTeams;\n\n\n\n\n","import { useDispatch } from \"react-redux\";\n\nconst SeePlayers = () => {\n    const dispatch = useDispatch();\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_PLAYERS\"\n    });\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { goToPage }\n                >\n                    See Players\n                </button>\n        </>\n        )\n    }\n\nexport default SeePlayers;\n\n\n\n\n","import GenerateTeams from '../components/GenerateTeams';\nimport SeePlayers from '../components/SeePlayers';\n\nlet Menu = () => (\n    <nav className=\"menu\">\n        <GenerateTeams />\n        <SeePlayers />\n    </nav>\n)\n\n\n\n\nexport default Menu;","// This allows us to calculate the win rate of individual players, our means to measure skill\nlet playerWR = (player) => player.wins === 0 ? -(player.losses) : player.wins / (player.wins + player.losses);\n\nexport default playerWR;","import playerWR from '../../data/TeamGeneratingLogic/logic/playerWR';\n\nconst PlayerCard = (player) => (\n    <>\n        <div className=\"playerCard_container\">\n            <h2 className=\"playerCard_playerName\">{ player.name }</h2>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Wins</p>\n                <p className=\"playerCard_data\">{ player.wins }</p>\n            </div>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Losses</p>\n                <p className=\"playerCard_data\">{ player.losses }</p>\n            </div>\n\n            <div className=\"playerCard_dataRow\">\n                <p className=\"playerCard_dataLabel\">Win Rate:</p>\n                <p className=\"playerCard_data playerWR\">{ playerWR(player).toFixed(2) }</p>\n            </div>\n        </div>\n\n    </>\n);\n\nexport default PlayerCard;\n","import PlayerCard from '../components/PlayerComponents/PlayerCard';\nimport { connect} from 'react-redux';\nimport Loading from '../components/Loading';\n\nconst SeePlayersPage = ({players}) => (\n    <>\n        <Loading>\n            <h1 className=\"title\">Main Menu</h1>\n            {players.map(player => {\n                    return  <PlayerCard \n                    name = {player.name}\n                    wins = { player.wins }\n                    losses = { player.losses }\n                    key = { player.id }\n                    />\n                })\n            }\n        </Loading>\n    </>\n)\n\nconst mapStatetoProps = (state) => ({players: state.players});\n\nexport default connect(mapStatetoProps)(SeePlayersPage);\n\n// export default SeePlayersPage;","import GeneratePage from '../components/GeneratePage';\nimport Menu from '../pages/Menu';\nimport SeePlayersPage from '../pages/SeePlayersPage';\n\nconst App = ({ page }) => {\n\n    switch(page) {\n        case \"generate\": return <GeneratePage />; // page that shows teams\n        case \"menu\": return <Menu /> ;\n        case \"players\": return <SeePlayersPage /> ;\n        default: return <Menu />;\n    }\n}\n\n\nexport default App;","import { connect } from \"react-redux\";\nimport App from \"./App\";\n\nlet mapStateToProps = (state) => {\n    return {\n        page: state.page,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const incReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score + 1\n    };\n}\n\nexport default incReducerT1;","const decReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score > 0 ? state.team_one_score - 1 : state.team_one_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT1;","const incReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score + 1\n    };\n}\n\nexport default incReducerT2;","const decReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score > 0 ? state.team_two_score - 1 : state.team_two_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT2;","const navGenPageReducer = (state) => {\n    return {\n        ...state,\n        page: \"generate\",\n    }\n}\n\nexport default navGenPageReducer;","const navMenuPageReducer = (state) => {\n    return {\n        ...state,\n        page: \"menu\",\n    }\n}\n\nexport default navMenuPageReducer;","const navPlayersPageReducer = (state) => {\n    return {\n        ...state,\n        page: \"players\",\n    }\n}\n\nexport default navPlayersPageReducer;","/*\nGENERATING THE TWO TEAMS\nThe top two players are passed into individual arrays. then second best player gets slightly higher level teammates than the best player.\n*/\nlet setTeamMembers = (playerPool) => { // playerPool = [{p1},{p2}..{pn}]\n    let firstOfT1 = playerPool[0];\n    let firstOfT2 = playerPool[1];\n\n    // Pass highest level player into team 1\n    let team_one_players = []\n    team_one_players.push(firstOfT1);\n\n    // pass second highest level player into team 2\n    let team_two_players = [];\n    team_two_players.push(firstOfT2);\n\n\n    // odd indexed players go into team 1, and even indexed players go into team two, excluding the top two players\n    for (let i = 2; i < (playerPool.length); i += 1) {\n        i % 2 === 0 ? team_two_players.push(playerPool[i]) : team_one_players.push(playerPool[i]);\n    }\n\n    // we return the balanced teams as an object containins the two team arrays\n    return {\n        team_one_players: team_one_players,\n        team_two_players: team_two_players,\n    };\n}\n\nexport default setTeamMembers;\n","// Fisher-Yates shuffle to shuffle players array into random order, and is considered an efficient way of shuffling an array.\nlet fisherYatesShuffle = (players) => {\n    for (let i = players.length - 1; i > 0; i -= 1) {\n        let j = Math.floor(Math.random() * (i + 1));\n\n        [players[i], players[j]] = [players[j], players[i]];\n    }\n    return players;\n}\n\nexport default fisherYatesShuffle;","// The re-ordering logic required inside .sort() for reordering the players in terms of win rate\nimport playerWR from './playerWR';\n\nlet compareByWR = (player1, player2) => {\n    let player1WR = playerWR(player1);\n    let player2WR = playerWR(player2);\n\n    if (player1WR < player2WR) {\n        return 1;\n    } else if (player1WR > player2WR) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nexport default compareByWR;","import fisherYatesShuffle from './fisherYatesShuffle';\nimport compareByWR from './compareByWR';\n\n/*\nWe're shuffling the players and then taking all the players needed from the beginning of the array, and keeping them in a new array.\nAfter this we sort the array so that higher win rate players (the better ones) are at the beginning of the array, and then return irt\n*/\nlet selectedPlayers = (teams_size, players) => {\n    // randomise playerbase\n    let allPLayers = [...fisherYatesShuffle(players)];\n    // array of players to be returned at the end of this function\n    let playerPool = [];\n\n    // push first ten players of the shuffled array into playerPool, as this will be the pool of players we'll get teams from\n    for (let i = 0; i < teams_size; i += 1) {\n        playerPool.push(allPLayers[i]);\n    }\n\n    // sort the array so tghat high skill players are at the beginning and return it.\n    return playerPool.sort(compareByWR);\n}\n\nexport default selectedPlayers;","// import { useSelector } from \"react-redux\";\nimport setTeamMembers from './logic/setTeamMembers';\nimport selectedPlayers from './logic/selectedPlayers';\n// import { getPlayers } from '../actions/api';\n\n\n\nconst setTeamsReducer = (state) => {\n    let players =  state.players;\n    let teams_size = state.teams_size;\n\n    // Select required players and generate two balanced teams\n    let playerPool = selectedPlayers(teams_size, players);\n    let teams = setTeamMembers(playerPool);\n    return {\n        ...state,\n        team_one_players: teams.team_one_players,\n        team_two_players: teams.team_two_players,\n    }\n}\n\nexport default setTeamsReducer;","// Control Team One Scoring\nimport incReducerT1 from './ScoringCardsLogic/incReducerT1';\nimport decReducerT1 from './ScoringCardsLogic/decReducerT1';\n\n// Control Team Two Scoring\nimport incReducerT2 from './ScoringCardsLogic/incReducerT2';\nimport decReducerT2 from './ScoringCardsLogic/decReducerT2';\n\n// Navigate Pages\nimport navGenPageReducer from \"./NavigationLogic/navGenPageReducer\";\nimport navMenuPageReducer from './NavigationLogic/navMenuPageReducer';\nimport navPlayersPageReducer from './NavigationLogic/navPlayersPageReducer';\n\n// Generate Teams\nimport setTeamsReducer from './TeamGeneratingLogic/setTeamsReducer';\n\n\nlet reducer = (state, action) => {\n    switch (action.type) {\n\n        // Team One Scoring\n        case \"INC_TEAM_ONE\": return incReducerT1(state);\n        case \"DEC_TEAM_ONE\": return decReducerT1(state);\n\n        // Team Two Scoring\n        case \"INC_TEAM_TWO\": return incReducerT2(state);\n        case \"DEC_TEAM_TWO\": return decReducerT2(state);\n\n        // Navigate Pages\n        case \"NAV_TO_MENU\": return navMenuPageReducer(state); \n        case \"NAV_TO_GENERATE\": return navGenPageReducer(state);\n        case \"NAV_TO_PLAYERS\": return navPlayersPageReducer(state);\n\n\n        // Generate Teams\n        case \"PLAYERS_LOADED\": return {...state, players: action.payload, loaded: true};\n        case \"GENERATE_TEAMS\": return setTeamsReducer(state);\n        \n        default: return state;\n    }\n};\n\nexport default reducer;","import reducer from './reducer';\nimport initial from './Initial';\n\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import { useDispatch, useSelector } from \"react-redux\";\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const page = useSelector(state => state.page)\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_MENU\"\n    });\n\n    return (\n        <>\n            <header>\n                {page === \"players\" ?\n                <h1 className=\"stickyHeader\"\n                onClick={ goToPage }\n                style={{cursor: \"pointer\"}}\n                >Main Menu</h1>\n\n                :\n\n                <h1 className=\"title\"\n                    onClick={ goToPage }\n                    style={{cursor: \"pointer\"}}\n                    >Teemz</h1>\n\n                }\n            </header>\n        </>\n    )\n    }\n\nexport default Header;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './data/store';\nimport Header from './components/Header';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= { store }>\n      <Header />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}