{"version":3,"sources":["components/GenerateTeams.js","components/TeamCard/ScoringComponents/ScoreT1/Score.js","components/TeamCard/ScoringComponents/ScoreT1/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/index.js","data/actions/state.js","components/TeamCard/ScoringComponents/ScoreCardT1.js","data/Initial.js","components/TeamCard/TeamComponents/RowPlayer.js","components/TeamCard/TeamComponents/PlayersCardT1/PlayersCardT1.js","components/TeamCard/TeamComponents/PlayersCardT1/index.js","components/TeamCardT1.js","components/TeamCard/TeamComponents/PlayersCardT2/PlayersCardT2.js","components/TeamCard/TeamComponents/PlayersCardT2/index.js","components/TeamCard/ScoringComponents/ScoreT2/Score.js","components/TeamCard/ScoringComponents/ScoreT2/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/index.js","components/TeamCard/ScoringComponents/ScoreCardT2.js","components/TeamCardT2.js","pages/GeneratingMatch.js","components/GeneratePage/GeneratePage.js","App.js","reportWebVitals.js","data/ScoringCardsLogic/incReducerT1.js","data/ScoringCardsLogic/decReducerT1.js","data/ScoringCardsLogic/incReducerT2.js","data/ScoringCardsLogic/decReducerT2.js","data/NavigationLogic/navGenPageReducer.js","data/TeamGeneratingLogic/setTeamMembers.js","data/TeamGeneratingLogic/fisherYatesShuffle.js","data/TeamGeneratingLogic/playerWR.js","data/TeamGeneratingLogic/compareByWR.js","data/TeamGeneratingLogic/selectedPlayers.js","data/TeamGeneratingLogic/setTeamsReducer.js","data/reducer.js","data/store.js","index.js"],"names":["GenerateTeams","dispatch","useDispatch","className","onClick","type","Score","team_one_score","connect","state","ScoreButtons","onIncrement","onDecrement","ScoreCardT1","ScoreT1","ScoreButtonsT1","initial","page","loaded","team_two_score","team_one_name","team_two_name","teams_size","players","id","name","wins","losses","team_one_players","team_two_players","RowPlayer","player","PlayersCardT1","map","Players","TeamCardT1","PlayersCardT2","ScoreCardT2","ScoreT2","ScoreButtonsT2","GeneratingMatch","TeamCardT2","GeneratePage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","incReducerT1","decReducerT1","incReducerT2","decReducerT2","navGenPageReducer","setTeamMembers","playerPool","firstOfT1","firstOfT2","push","i","length","fisherYatesShuffle","j","Math","floor","random","playerWR","compareByWR","player1","player2","player1WR","player2WR","selectedPlayers","allPLayers","sort","setTeamsReducer","teams","reducer","action","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3eec5b62.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\";\n\nconst GenerateTeams = () => {\n    const dispatch = useDispatch();\n\n    function passTeamsIntoState() {\n        dispatch ({\n            type: \"GENERATE_TEAMS\",\n            \n        })\n    }\n\n    const goToPage = () => dispatch({\n        type: \"NAV_TO_GENERATE\"\n    });\n\n    const onClick = () => {\n        passTeamsIntoState();\n        goToPage();\n    }\n\n        return (\n            <>\n                <button\n                    className=\"doButton\"\n                    onClick= { onClick }\n                >\n                    Generate Teams\n                </button>\n        </>\n        )\n    }\n\nexport default GenerateTeams;\n\n\n\n\n","const Score = ({ team_one_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_one_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_one_score: state.team_one_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement }) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamOne, decTeamOne } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamOne()),\n    onDecrement: () => dispatch(decTeamOne()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","// Team one score\nexport const incTeamOne = () => {\n    return {\n        type: \"INC_TEAM_ONE\",\n    }\n}\n\nexport const decTeamOne = () => {\n    return {\n        type: \"DEC_TEAM_ONE\",\n    }\n}\n\n// Team two score\nexport const incTeamTwo = () => {\n    return {\n        type: \"INC_TEAM_TWO\",\n    }\n}\n\nexport const decTeamTwo = () => {\n    return {\n        type: \"DEC_TEAM_TWO\",\n    }\n}","import ScoreT1 from \"../ScoringComponents/ScoreT1\";\nimport ScoreButtonsT1 from \"../ScoringComponents/ScoreButtonsT1\";\n\nconst ScoreCardT1 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>   \n        <ScoreT1 />\n        <ScoreButtonsT1 />\n    </>\n);\n\nexport default ScoreCardT1;","// Initial state\nconst initial = {\n    page: \"menu\",\n    loaded: false,\n\n    team_one_score: 0,\n    team_two_score: 0,\n\n    team_one_name: \"Team 1\",\n    team_two_name: \"Team 2\",\n\n    teams_size: 10,\n\n    players: [\n        {id: 1, name: \"Sokka\", wins: 2, losses: 2},\n        {id: 2, name: \"Ang\", wins: 1, losses: 0},\n        {id: 3, name: \"Appa\", wins: 0, losses: 1},\n        {id: 4, name: \"Momo\", wins: 5, losses: 15},\n        {id: 5, name: \"Iroh\", wins: 0, losses: 0},\n        {id: 6, name: \"Katara\", wins: 0, losses: 0},\n        {id: 7, name: \"Pabu\", wins: 0, losses: 0},\n        {id: 8, name: \"Azula\", wins: 0, losses: 0},\n        {id: 9, name: \"Zuko\", wins: 0, losses: 0},\n        {id: 10, name: \"Toph\", wins: 0, losses: 0},\n        {id: 11, name: \"Mako\", wins: 0, losses: 0},\n        {id: 12, name: \"Bolin\", wins: 0, losses: 0},\n        {id: 13, name: \"Lin Beifong\", wins: 0, losses: 0},\n        {id: 14, name: \"Jinora\", wins: 0, losses: 0},\n        {id: 15, name: \"Tenzin\", wins: 0, losses: 0},\n        {id: 16, name: \"Asami\", wins: 0, losses: 0},\n        {id: 17, name: \"Kyoshi\", wins: 0, losses: 0},\n        {id: 18, name: \"Tui\", wins: 0, losses: 0},\n        {id: 19, name: \"Hei Bai\", wins: 0, losses: 0},\n        {id: 20, name: \"Raava\", wins: 0, losses: 0},\n        {id: 21, name: \"Vatu\", wins: 0, losses: 0},\n        {id: 22, name: \"Zhu Li\", wins: 0, losses: 0},\n        {id: 23, name: \"Raiko\", wins: 0, losses: 0},\n        {id: 24, name: \"Iroh II\", wins: 0, losses: 0},\n    ],\n    \n    team_one_players: [],\n    team_two_players: [],\n\n};\n\nexport default initial;\n\n","const RowPlayer = (player) => (\n    <>\n        <div className=\"teamCard_playerName\">\n            <p>{ player.name }</p>\n        </div>\n\n    </>\n);\n\nexport default RowPlayer;\n","import RowPlayer from '../RowPlayer';\n\nconst PlayersCardT1 = ({team_one_players}) => {\n\n    return (\n        <ul>\n        {\n            team_one_players.map(player => (\n                <RowPlayer name = { player.name } key = { player }/>\n            ))\n        }\n    </ul>\n    )\n\n}\n\nexport default PlayersCardT1;\n\n","import { connect } from 'react-redux';\nimport Players from './PlayersCardT1';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_one_players: state.team_one_players,\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","import ScoreCard from './TeamCard/ScoringComponents/ScoreCardT1';\nimport initial from '../data/Initial';\nimport PlayersCardT1 from './TeamCard/TeamComponents/PlayersCardT1';\n\nlet TeamCardT1 = () => (\n    <>\n        <div className=\"teamCard_container\">\n            <h2 className=\"teamCard_teamName\">{ initial.team_one_name }</h2>   \n            <PlayersCardT1 />\n            <ScoreCard />\n        </div>\n    </>\n)\n\nexport default TeamCardT1;","import RowPlayer from '../RowPlayer';\n\nconst PlayersCardT2 = ({ team_two_players }) => {\n    \n    return (\n        <ul>\n        {\n            team_two_players.map(player => (\n                <RowPlayer name = { player.name } key = { player } />\n            ))\n        }\n        </ul>\n    )\n\n}\n\nexport default PlayersCardT2;","import { connect } from 'react-redux';\nimport Players from './PlayersCardT2';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_two_players: state.team_two_players\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","const Score = ({ team_two_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_two_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_two_score: state.team_two_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement}) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamTwo, decTeamTwo } from '../../../../data/actions/state.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamTwo()),\n    onDecrement: () => dispatch(decTeamTwo()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","import ScoreT2 from \"./ScoreT2\";\nimport ScoreButtonsT2 from \"./ScoreButtonsT2\";\n\nconst ScoreCardT2 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>\n\n        <ScoreT2 />\n        <ScoreButtonsT2 />\n    </>\n);\n\nexport default ScoreCardT2;","import PlayersCardT2 from './TeamCard/TeamComponents/PlayersCardT2';\nimport ScoreCard from './TeamCard/ScoringComponents/ScoreCardT2';\nimport initial from '../data/Initial';\n\nlet TeamCardT1 = () => (\n    <>\n        <div className=\"teamCard_container\">\n            <h2 className=\"teamCard_teamName\">{ initial.team_two_name }</h2>   \n            <PlayersCardT2 />\n            <ScoreCard />\n        </div>\n    </>\n)\n\nexport default TeamCardT1;","import TeamCardT1 from \"../components/TeamCardT1\";\nimport TeamCardT2 from \"../components/TeamCardT2\";\n\nconst GeneratingMatch = () => ( \n    <>  \n        <TeamCardT1 />\n        <TeamCardT2 />\n    </>\n);\n\nexport default GeneratingMatch;","import GenerateTeams from \"../GenerateTeams\"\nimport GeneratingMatch from '../../pages/GeneratingMatch';\n// import Button from \"../Button\";\n\nlet GeneratePage = () => {\n    return (\n        <>\n            <GenerateTeams />\n            <GeneratingMatch />\n\n            {/* <Button\n            onClick={ console.log(\"stop logging!\") }\n            label=\"Save Game!\"\n            type=\"button\"\n            /> */}\n        </>\n    )\n}\n\nexport default GeneratePage;","import GeneratePage from './components/GeneratePage/GeneratePage';\n\nconst App = () => ( \n    <>  \n        <header>\n            <h1 className=\"title\">Teemz</h1>\n        </header>\n            <GeneratePage />\n    </>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const incReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score + 1\n    };\n}\n\nexport default incReducerT1;","const decReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score > 0 ? state.team_one_score - 1 : state.team_one_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT1;","const incReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score + 1\n    };\n}\n\nexport default incReducerT2;","const decReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score > 0 ? state.team_two_score - 1 : state.team_two_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT2;","const navGenPageReducer = (state) => {\n    return {\n        ...state,\n        page: \"generate\",\n    }\n}\n\nexport default navGenPageReducer;","/*\nGENERATING THE TWO TEAMS\nThe top two players are passed into individual arrays. then second best player gets slightly higher level teammates than the best player.\n*/\nlet setTeamMembers = (playerPool) => { // playerPool = [{p1},{p2}..{pn}]\n    let firstOfT1 = playerPool[0];\n    let firstOfT2 = playerPool[1];\n\n    // Pass highest level player into team 1\n    let team_one_players = []\n    team_one_players.push(firstOfT1);\n\n    // pass second highest level player into team 2\n    let team_two_players = [];\n    team_two_players.push(firstOfT2);\n\n\n    // odd indexed players go into team 1, and even indexed players go into team two, excluding the top two players\n    for (let i = 2; i < (playerPool.length); i += 1) {\n        i % 2 === 0 ? team_two_players.push(playerPool[i]) : team_one_players.push(playerPool[i]);\n    }\n\n    // we return the balanced teams as an object containins the two team arrays\n    return {\n        team_one_players: team_one_players,\n        team_two_players: team_two_players,\n    };\n}\n\nexport default setTeamMembers;\n","// Fisher-Yates shuffle to shuffle players array into random order, and is considered an efficient way of shuffling an array.\nlet fisherYatesShuffle = (players) => {\n    for (let i = players.length - 1; i > 0; i -= 1) {\n        let j = Math.floor(Math.random() * (i + 1));\n\n        [players[i], players[j]] = [players[j], players[i]];\n    }\n    return players;\n}\n\nexport default fisherYatesShuffle;","// This allows us to calculate the win rate of individual players, our means to measure skill\nlet playerWR = (player) => player.wins === 0 ? -(player.losses) : player.wins / (player.wins + player.losses);\n\nexport default playerWR;","// The re-ordering logic required inside .sort() for reordering the players in terms of win rate\nimport playerWR from './playerWR';\n\nlet compareByWR = (player1, player2) => {\n    let player1WR = playerWR(player1);\n    let player2WR = playerWR(player2);\n\n    if (player1WR < player2WR) {\n        return 1;\n    } else if (player1WR > player2WR) {\n        return -1;\n    } else {\n        return 0;\n    }\n}\n\nexport default compareByWR;","import fisherYatesShuffle from './fisherYatesShuffle';\nimport compareByWR from './compareByWR';\n\n/*\nWe're shuffling the players and then taking all the players needed from the beginning of the array, and keeping them in a new array.\nAfter this we sort the array so that higher win rate players (the better ones) are at the beginning of the array, and then return irt\n*/\nlet selectedPlayers = (teams_size, players) => {\n    // randomise playerbase\n    let allPLayers = [...fisherYatesShuffle(players)];\n    // array of players to be returned at the end of this function\n    let playerPool = [];\n\n    // push first ten players of the shuffled array into playerPool, as this will be the pool of players we'll get teams from\n    for (let i = 0; i < teams_size; i += 1) {\n        playerPool.push(allPLayers[i]);\n    }\n\n    // sort the array so tghat high skill players are at the beginning and return it.\n    return playerPool.sort(compareByWR);\n}\n\nexport default selectedPlayers;","// import { useSelector } from \"react-redux\";\nimport setTeamMembers from './setTeamMembers';\nimport selectedPlayers from './selectedPlayers';\n\nconst setTeamsReducer = (state) => {\n    let players =  state.players;\n    let teams_size = state.teams_size;\n\n    // Select required players and generate two balanced teams\n    let playerPool = selectedPlayers(teams_size, players);\n    let teams = setTeamMembers(playerPool);\n    return {\n        ...state,\n        team_one_players: teams.team_one_players,\n        team_two_players: teams.team_two_players,\n    }\n}\n\nexport default setTeamsReducer;","// Control Team One Scoring\nimport incReducerT1 from './ScoringCardsLogic/incReducerT1';\nimport decReducerT1 from './ScoringCardsLogic/decReducerT1';\n\n// Control Team Two Scoring\nimport incReducerT2 from './ScoringCardsLogic/incReducerT2';\nimport decReducerT2 from './ScoringCardsLogic/decReducerT2';\n\n// Navigate Pages\nimport navGenPageReducer from \"./NavigationLogic/navGenPageReducer\";\n\n\nimport setTeamsReducer from './TeamGeneratingLogic/setTeamsReducer';\n\nlet reducer = (state, action) => {\n    switch (action.type) {\n\n        // Team One Scoring\n        case \"INC_TEAM_ONE\": return incReducerT1(state);\n        case \"DEC_TEAM_ONE\": return decReducerT1(state);\n\n        // Team Two Scoring\n        case \"INC_TEAM_TWO\": return incReducerT2(state);\n        case \"DEC_TEAM_TWO\": return decReducerT2(state);\n\n        // Navigate Pages\n        case \"NAV_TO_GENERATE\": return navGenPageReducer(state);\n\n        // Generate Teams\n        case \"GENERATE_TEAMS\": return setTeamsReducer(state);\n        \n        default: return state;\n    }\n};\n\nexport default reducer;","import reducer from './reducer';\nimport initial from './Initial';\n\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer,\n    initial,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './data/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= { store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}