{"version":3,"sources":["data/TeamGeneratingLogic/randomiseReducer.js","components/TeamCard/ScoringComponents/ScoreT1/Score.js","components/TeamCard/ScoringComponents/ScoreT1/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT1/index.js","data/actions.js","components/TeamCard/ScoringComponents/ScoreCardT1.js","data/Initial.js","components/TeamCard/TeamComponents/RowPlayer.js","components/TeamCard/TeamComponents/PlayersCardT1/PlayersCardT1.js","components/TeamCard/TeamComponents/PlayersCardT1/index.js","components/TeamCardT1.js","components/TeamCard/TeamComponents/PlayersCardT2/PlayersCardT2.js","components/TeamCard/TeamComponents/PlayersCardT2/index.js","components/TeamCard/ScoringComponents/ScoreT2/Score.js","components/TeamCard/ScoringComponents/ScoreT2/index.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/ScoreButtons.js","components/TeamCard/ScoringComponents/ScoreButtonsT2/index.js","components/TeamCard/ScoringComponents/ScoreCardT2.js","components/TeamCardT2.js","pages/GenerateMatch/GenerateMatch.js","components/GenerateTeams/GenerateTeams.js","components/GenerateTeams/index.js","App.js","reportWebVitals.js","data/ScoringCardsLogic/incReducerT1.js","data/ScoringCardsLogic/decReducerT1.js","data/ScoringCardsLogic/incReducerT2.js","data/ScoringCardsLogic/decReducerT2.js","data/reducer.js","data/store.js","index.js"],"names":["Score","team_one_score","className","connect","state","ScoreButtons","onIncrement","onDecrement","onClick","dispatch","type","ScoreCardT1","ScoreT1","ScoreButtonsT1","initial","page","team_two_score","team_one_name","team_two_name","teams_size","players","team_one_players","team_two_players","RowPlayer","name","PlayersCardT1","map","player","Players","TeamCardT1","PlayersCardT2","ScoreCardT2","ScoreT2","ScoreButtonsT2","GenerateMatch","TeamCardT2","GenerateTeams","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","incReducerT1","decReducerT1","incReducerT2","decReducerT2","allPlayers","tenPlayers","teamOnePlayers","teamTwoPlayers","length","index","Math","floor","random","push","splice","i","randomiseReducer","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c42177af.chunk.js","sourcesContent":["import initial from \"../Initial\";\n\n/*\nIn order to randomly pick 10 players, a nested loop is used. The first loop tells the inner logic to run until we have those ten players in the array.\nThe inner loop ensures that no player is selected twice.\n*/\n\nlet allPlayers = initial.players;\nlet tenPlayers = [];\nlet teamOnePlayers = [];\nlet teamTwoPlayers = [];\n\nlet randomPlayerIndex = () => Math.floor(Math.random() * (allPlayers.length));\n\nwhile (tenPlayers.length < initial.teams_size) {\n    let index = randomPlayerIndex();\n    tenPlayers.push(initial.players[index]);\n    allPlayers.splice(index, 1);\n}\n\n/* Now that we have 10 random players, we need to add them to teams one and two */\n\nfor (let i = 0; i < initial.teams_size; i += 1) {\n    teamOnePlayers.length >= teamTwoPlayers.length ? teamTwoPlayers.push(tenPlayers[i]) : teamOnePlayers.push(tenPlayers[i]);\n}\n\nconst randomiseReducer = (state) => {\n    return {\n        ...state,\n        team_one_players: teamOnePlayers,\n        team_two_players: teamTwoPlayers\n    };\n}\n\nexport default randomiseReducer;","const Score = ({ team_one_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_one_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_one_score: state.team_one_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement}) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamOne, decTeamOne } from '../../../../data/actions.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamOne()),\n    onDecrement: () => dispatch(decTeamOne()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","// Team one score\nexport const incTeamOne = () => {\n    return {\n        type: \"INC_TEAM_ONE\",\n    }\n}\n\nexport const decTeamOne = () => {\n    return {\n        type: \"DEC_TEAM_ONE\",\n    }\n}\n\n// Team two score\nexport const incTeamTwo = () => {\n    return {\n        type: \"INC_TEAM_TWO\",\n    }\n}\n\nexport const decTeamTwo = () => {\n    return {\n        type: \"DEC_TEAM_TWO\",\n    }\n}\n\n// Generate Teams\nexport const generateTeams = () => {\n    return {\n        type: \"GENERATE_TEAMS\",\n    }\n}","import ScoreT1 from \"../ScoringComponents/ScoreT1\";\nimport ScoreButtonsT1 from \"../ScoringComponents/ScoreButtonsT1\";\n\nconst ScoreCardT1 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>   \n        <ScoreT1 />\n        <ScoreButtonsT1 />\n    </>\n);\n\nexport default ScoreCardT1;","// Initial state\nconst initial = {\n    page: \"GenerateMatch\",\n\n    team_one_score: 0,\n    team_two_score: 0,\n\n    team_one_name: \"Team 1\",\n    team_two_name: \"Team 2\",\n\n    teams_size: 10,\n\n    players: [\"Katara\", \"Ang\", \"Apa\", \"Sokka\", \"Momo\", \"Pabu\", \"Iroh\", \"Azula\", \"Zuko\", \"Toph\"],\n    team_one_players: [],\n    team_two_players: [],\n\n};\n\nexport default initial;\n\n","const RowPlayer = ({ name }) => (\n    <>\n        <div className=\"teamCard_playerName\">\n            <p>{ name }</p>\n        </div>\n\n    </>\n);\n\nexport default RowPlayer;\n","import RowPlayer from '../RowPlayer';\n\nconst PlayersCardT1 = ({ team_one_players }) => {\n\n    return (\n        <ul>\n        {\n            team_one_players.map(player => (\n                <RowPlayer name = { player } key = { player } />\n            ))\n        }\n    </ul>\n    )\n\n}\n\nexport default PlayersCardT1;","import { connect } from 'react-redux';\nimport Players from './PlayersCardT1';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_one_players: state.team_one_players,\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","import ScoreCard from './TeamCard/ScoringComponents/ScoreCardT1';\nimport initial from '../data/Initial';\nimport PlayersCardT1 from './TeamCard/TeamComponents/PlayersCardT1';\n\nlet TeamCardT1 = () =>(\n    <>\n        <div className=\"teamCard_container\">\n            <h2 className=\"teamCard_teamName\">{ initial.team_one_name }</h2>   \n            <PlayersCardT1 />\n            <ScoreCard />\n        </div>\n    </>\n)\n\nexport default TeamCardT1;","import RowPlayer from '../RowPlayer';\n// import { connect } from 'react-redux';\n\n\n// class Players extends Component {\n\n// }\n\nconst PlayersCardT2 = ({ team_two_players }) => {\n    \n    return (\n        <ul>\n        {\n            team_two_players.map(player => (\n                <RowPlayer name = { player } key = { player } />\n            ))\n        }\n        </ul>\n    )\n\n}\n\nexport default PlayersCardT2;","import { connect } from 'react-redux';\nimport Players from './PlayersCardT2';\n\nconst mapStateToProps = (state) => {\n    return {\n        team_two_players: state.team_two_players\n    };\n};\n\nexport default connect(mapStateToProps)(Players);","const Score = ({ team_two_score }) => ( \n    <>  \n        <p className=\"teamCard_teamScore\">{ team_two_score }</p>\n    </>\n);\n\nexport default Score;\n","import { connect } from \"react-redux\";\nimport Score from \"./Score\";\n\nlet mapStateToProps = (state) => {\n    return {\n        team_two_score: state.team_two_score,\n    };\n};\n\n\n\nexport default connect(mapStateToProps)(Score);\n\n","const ScoreButtons = ({ onIncrement, onDecrement}) => ( \n    <>\n        <div>\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onDecrement }\n            >\n                -\n            </button>\n\n            <button\n                className=\"teamCard_setScoreButton\"\n                onClick= { onIncrement }\n            >\n                +\n            </button>\n\n        </div>\n    </>\n);\n\nexport default ScoreButtons;","import { connect } from \"react-redux\";\nimport ScoreButtons from \"./ScoreButtons\";\nimport { incTeamTwo, decTeamTwo } from '../../../../data/actions.js';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onIncrement: () => dispatch(incTeamTwo()),\n    onDecrement: () => dispatch(decTeamTwo()),\n});\n\nexport default connect(null, mapDispatchToProps)(ScoreButtons);\n\n","import ScoreT2 from \"./ScoreT2\";\nimport ScoreButtonsT2 from \"./ScoreButtonsT2\";\n\nconst ScoreCardT2 = () => ( \n    <>\n        <h3 className=\"teamCard_setScore\">Set Score</h3>\n\n        <ScoreT2 />\n        <ScoreButtonsT2 />\n    </>\n);\n\nexport default ScoreCardT2;","import PlayersCardT2 from './TeamCard/TeamComponents/PlayersCardT2';\nimport ScoreCard from './TeamCard/ScoringComponents/ScoreCardT2';\nimport initial from '../data/Initial';\n\nlet TeamCardT1 = () => (\n    <>\n        <div className=\"teamCard_container\">\n            <h2 className=\"teamCard_teamName\">{ initial.team_two_name }</h2>   \n            <PlayersCardT2 />\n            <ScoreCard />\n        </div>\n    </>\n)\n\nexport default TeamCardT1;","import TeamCardT1 from \"../../components/TeamCardT1\";\nimport TeamCardT2 from \"../../components/TeamCardT2\";\n\nconst GenerateMatch =  () => ( \n    <>  \n        <TeamCardT1 />\n        <TeamCardT2 />\n    </>\n);\n\nexport default GenerateMatch;","const GenerateTeams = ({ onClick }) => ( \n    <>\n        <button\n            className=\"doButton\"\n            onClick= { onClick }\n        >\n            Generate Teams\n        </button>\n    </>\n);\n\nexport default GenerateTeams;","import { connect } from \"react-redux\";\nimport { generateTeams } from '../../data/actions';\nimport GenerateTeams from './GenerateTeams';\n\nlet mapDispatchToProps = (dispatch) => ({\n    onClick: () => dispatch(generateTeams()),\n});\n\nexport default connect(null, mapDispatchToProps)(GenerateTeams);","import GenerateMatch from './pages/GenerateMatch/GenerateMatch';\nimport GenerateTeams from './components/GenerateTeams';\n\nconst App = () => ( \n    <>  \n        <header>\n            <h1 className=\"title\">Teemz</h1>\n        </header>\n        \n        <GenerateTeams />\n        <GenerateMatch />\n    </>\n);\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const incReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score + 1\n    };\n}\n\nexport default incReducerT1;","const decReducerT1 = (state) => {\n    return {\n        ...state,\n        team_one_score: state.team_one_score > 0 ? state.team_one_score - 1 : state.team_one_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT1;","const incReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score + 1\n    };\n}\n\nexport default incReducerT2;","const decReducerT2 = (state) => {\n    return {\n        ...state,\n        team_two_score: state.team_two_score > 0 ? state.team_two_score - 1 : state.team_two_score // ternary to avoid negative scores\n    };\n}\n\nexport default decReducerT2;","// Control Team One Scoring\nimport incReducerT1 from './ScoringCardsLogic/incReducerT1';\nimport decReducerT1 from './ScoringCardsLogic/decReducerT1';\n\n// Control Team Two Scoring\nimport incReducerT2 from './ScoringCardsLogic/incReducerT2';\nimport decReducerT2 from './ScoringCardsLogic/decReducerT2';\n\n// Generate Teams\nimport randomiseReducer from './TeamGeneratingLogic/randomiseReducer';\n\n\n\nlet reducer = (state, action) => {\n    switch (action.type) {\n\n        // Team One Scoring\n        case \"INC_TEAM_ONE\": return incReducerT1(state);\n        case \"DEC_TEAM_ONE\": return decReducerT1(state);\n\n        // Team Two Scoring\n        case \"INC_TEAM_TWO\": return incReducerT2(state);\n        case \"DEC_TEAM_TWO\": return decReducerT2(state);\n\n        // Generate Teams\n        case \"GENERATE_TEAMS\": return randomiseReducer(state);\n        default: return state;\n    }\n};\n\nexport default reducer;","import reducer from './reducer';\nimport initial from './Initial';\n\nimport { createStore } from \"redux\";\n\nconst store = createStore(reducer,\n    initial,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './data/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store= { store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}